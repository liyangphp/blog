import React from 'react';
import SimpleMDE from 'simplemde';
import CodeMirror from 'codemirror';
import Upload, { Options as UploadOptions } from './plugins/Upload';
import 'simplemde/dist/simplemde.min.css';
import 'yt-emoji-picker/dist/style.css';
import './style.less';
export interface SimpleMDEEditorProps {
    id?: string;
    className?: string;
    label?: string;
    emoji?: {
        enabled: boolean;
        autoComplete: boolean;
        insertConvertTo: string;
        emojiToolkit?: {
            emojiSize?: number;
            imagePathPNG?: string;
            sprites?: boolean;
            spriteSize?: number;
        };
    };
    uploadOptions?: UploadOptions;
    getMdeInstance?: (simplemde: TSimpleMDE) => void;
    extraKeys?: CodeMirror.KeyMap;
    value?: string;
    onChange?: (value: string) => void;
    options?: SimpleMDE.Options;
    emojiToolkit?: any;
    emojiData: string[];
    EmojiPicker: any;
    escape?: any;
    Textcomplete?: any;
    CodemirrorEditor?: any;
}
export interface SimpleMDEEditorState {
    contentChanged: boolean;
}
export declare type TSimpleMDE = SimpleMDE & {
    toggleFullScreen: () => void;
    autosaveTimeoutId: number;
};
declare class SimpleMDEEditor extends React.Component<SimpleMDEEditorProps, SimpleMDEEditorState> {
    state: SimpleMDEEditorState;
    id: string;
    wrapperId: string;
    simplemde?: TSimpleMDE;
    upload?: Upload;
    textcomplete?: any;
    emojiPickerPopup?: HTMLDivElement;
    constructor(props: SimpleMDEEditorProps);
    componentDidMount(): void;
    componentWillReceiveProps(nextProps: SimpleMDEEditorProps): void;
    componentWillUnmount(): void;
    handleChange: (instance: any, changeObj: CodeMirror.EditorChange) => void;
    handleEmojiSelect: (emoji: any, e: any) => void;
    toggleEmojiPickerPopup(emojiBtn: any): void;
    hiddenEmojiPickerPopup: (e: any) => void;
    triggerChange: (value: string) => void;
    getMdeInstance: () => void;
    addExtraKeys: () => void;
    removeEvents: () => void;
    addEvents: () => void;
    createEditor: () => TSimpleMDE;
    initAutoCompleteEmoji(): void;
    render(): JSX.Element;
}
export default SimpleMDEEditor;
