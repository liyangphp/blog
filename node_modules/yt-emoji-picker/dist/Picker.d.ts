import React from 'react';
import { EmojiDataType, EmojiType } from './utils';
import './style.less';
export interface PickerProps {
    /**
     * 配置文档 https://github.com/joypixels/emoji-toolkit/blob/master/USAGE.md
     */
    emojiToolkit?: {
        emojiSize?: number;
        imagePathPNG?: string;
        sprites?: boolean;
        spriteSize?: number;
    };
    search: boolean;
    onSelect: (emoji: EmojiType) => void;
    recentCount: number;
    headerHowHeight?: number;
    rowHeight?: number;
}
export interface PickerState {
    emojiData: EmojiDataType;
    recentKeys: string[];
    recentRows: [];
    modifier: number;
    category: string;
    term: string;
}
export declare type CategoriesType = {
    [key: string]: {
        title: string;
        emoji: string;
    };
};
export default class Picker extends React.Component<PickerProps, PickerState> {
    static defaultProps: {
        recentCount: number;
        headerHowHeight: number;
        rowHeight: number;
    };
    state: PickerState;
    /**
     * search input ref
     */
    search: any;
    rowsSelector: any;
    recentRowsSelector: any;
    /**
     * Categories ref
     */
    categories: any;
    constructor(props: PickerProps);
    componentWillMount(): void;
    componentDidMount(): void;
    componentWillUnmount(): void;
    onActiveCategoryChange: (category: string) => void;
    onModifierChange: (modifier: number) => void;
    setCategoriesRef: (categories: any) => void;
    setSearchRef: (ref: any) => void;
    handleSearch: () => void;
    handleEmojiSelect: (emoji: any) => void;
    reloadRecentRows(recentKeys: string[]): void;
    renderHeader(): JSX.Element;
    renderSearch(): JSX.Element | undefined;
    renderContent(): JSX.Element;
    render(): JSX.Element;
}
