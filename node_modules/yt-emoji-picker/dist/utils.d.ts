import { CategoriesType } from './Picker';
export interface EmojiType {
    ascii: string[];
    category: string;
    code_points: {
        base: string;
        decimal: string;
        default_matches: string[];
        fully_qualified: string;
        greedy_matches: string[];
        non_fully_qualified: string;
        output: string;
    };
    display: number;
    diversities: any[];
    diversity: string;
    gender: string;
    genders: string[];
    keywords: string[];
    name: string;
    order: number;
    shortname: string;
    shortname_alternates: string[];
    unicode_version: number;
    _key: string;
}
export interface EmojiDataType {
    [category: string]: {
        [shortname: string]: EmojiType[];
    };
}
export declare function createEmojiDataFromStrategy(strategy: {
    [key: string]: EmojiType;
}): EmojiDataType;
/**
 * 查找对应肤色的emoji
 */
export declare function findEmojiVariant(emojis: EmojiType[], modifier: number): EmojiType;
export declare function rowsSelector(categories: CategoriesType, emojiData: EmojiDataType, modifier: number, term: string): (EmojiType[] | {
    category: {
        title: string;
        emoji: string;
    };
    id: string;
})[];
export declare function createRowsSelector(): (categories: CategoriesType, emojiData: EmojiDataType, modifier: number, term: string) => any;
export declare function createRecentRowsSelector(): (categories: CategoriesType, emojiData: EmojiDataType, loadCached?: boolean) => any;
export declare function getRecentCategory(strategy: {
    [key: string]: EmojiType;
}, recentKeys: string[]): {
    recentCategory: EmojiDataType;
    notFounds: string[];
};
