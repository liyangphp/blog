/// <reference types="lodash" />
import { Component } from 'react';
import { EmojiType } from './utils';
export interface CategoriesProps {
    emojiToolkit?: {
        emojiSize?: number;
        imagePathPNG?: string;
        sprites?: boolean;
        spriteSize?: number;
    };
    rows: {
        category: object;
        id: string;
    }[];
    headerHowHeight: number;
    rowHeight: number;
    modifier: number;
    onActiveCategoryChange: (category: string) => void;
    onSelect: (emoji: EmojiType) => void;
    onModifierChange: (modifier: number) => void;
}
export default class Categories extends Component<CategoriesProps> {
    lastActiveCategory?: string;
    /**
     * 所有 CategoryHeader ref 对象
     */
    categories: any;
    /**
     * List ref
     */
    list: any;
    componentDidUpdate(prevProps: CategoriesProps): void;
    setListRef: (list: any) => void;
    onScroll: (({ scrollTop }: any) => void) & import("lodash").Cancelable;
    getActiveCategory: (scrollTop?: number) => any;
    rowHeight: ({ index }: {
        index: number;
    }) => number;
    rowRenderer: ({ key, index, style }: {
        key: string;
        index: number;
        style: object;
    }) => JSX.Element;
    setCategoryRef: (id: string) => (category: any) => void;
    jumpToCategory: (id: string) => void;
    render(): JSX.Element;
}
