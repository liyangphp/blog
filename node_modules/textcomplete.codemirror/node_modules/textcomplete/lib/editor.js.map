{"version":3,"sources":["../src/editor.js"],"names":["Editor","_","Error","code","moveEvent","cancelable","detail","emit","enterEvent","changeEvent","beforeCursor","getBeforeCursor","escEvent","e","keyCode","ctrlKey"],"mappings":";;;;;;;;AAEA;;;;AAEA;;AACA;;;;;;;;;;;;AAYA;;;;;;;;;;AAVA;IAkBqBA,M;;;;;;;;;;;;AACnB;;;;;8BAKU;AACR,aAAO,IAAP;AACD;;AAED;;;;;;sCAGkBC,C,EAAuB;AACvC,YAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN;AACD;;AAED;;;;;;;sCAIgC;AAC9B,YAAM,IAAIA,KAAJ,CAAU,kBAAV,CAAN;AACD;;AAED;;;;;;sCAG0B;AACxB,YAAM,IAAIA,KAAJ,CAAU,kBAAV,CAAN;AACD;;AAED;;;;;;qCAGyB;AACvB,YAAM,IAAIA,KAAJ,CAAU,kBAAV,CAAN;AACD;;AAED;;;;kCACcC,I,EAAkC;AAC9C,UAAMC,YAAY,8BAAkB,MAAlB,EAA0B;AAC1CC,oBAAY,IAD8B;AAE1CC,gBAAQ;AACNH,gBAAMA;AADA;AAFkC,OAA1B,CAAlB;AAMA,WAAKI,IAAL,CAAU,MAAV,EAAkBH,SAAlB;AACA,aAAOA,SAAP;AACD;;AAED;;;;qCAC8B;AAC5B,UAAMI,aAAa,8BAAkB,OAAlB,EAA2B,EAAEH,YAAY,IAAd,EAA3B,CAAnB;AACA,WAAKE,IAAL,CAAU,OAAV,EAAmBC,UAAnB;AACA,aAAOA,UAAP;AACD;;AAED;;;;sCAC+B;AAC7B,UAAMC,cAAc,8BAAkB,QAAlB,EAA4B;AAC9CH,gBAAQ;AACNI,wBAAc,KAAKC,eAAL;AADR;AADsC,OAA5B,CAApB;AAKA,WAAKJ,IAAL,CAAU,QAAV,EAAoBE,WAApB;AACA,aAAOA,WAAP;AACD;;AAED;;;;mCAC4B;AAC1B,UAAMG,WAAW,8BAAkB,KAAlB,EAAyB,EAAEP,YAAY,IAAd,EAAzB,CAAjB;AACA,WAAKE,IAAL,CAAU,KAAV,EAAiBK,QAAjB;AACA,aAAOA,QAAP;AACD;;AAED;;;;4BACQC,C,EAA2B;AACjC,aAAOA,EAAEC,OAAF,KAAc,CAAd,GAAkB,IAAlB,CAAuB;AAAvB,QACAD,EAAEC,OAAF,KAAc,CAAd,GAAkB,OAAlB,CAA0B;AAA1B,QACAD,EAAEC,OAAF,KAAc,EAAd,GAAmB,OAAnB,CAA2B;AAA3B,QACAD,EAAEC,OAAF,KAAc,EAAd,GAAmB,MAAnB,CAA0B;AAA1B,QACAD,EAAEC,OAAF,KAAc,EAAd,GAAmB,MAAnB,CAA0B;AAA1B,QACAD,EAAEC,OAAF,KAAc,EAAd,GAAmB,MAAnB,CAA0B;AAA1B,QACAD,EAAEC,OAAF,KAAc,EAAd,GAAmB,KAAnB,CAAyB;AAAzB,QACAD,EAAEC,OAAF,KAAc,EAAd,GAAmB,IAAnB,CAAwB;AAAxB,QACAD,EAAEC,OAAF,KAAc,EAAd,GAAmB,MAAnB,CAA0B;AAA1B,QACAD,EAAEC,OAAF,KAAc,EAAd,IAAoBD,EAAEE,OAAtB,GAAgC,MAAhC,CAAuC;AAAvC,QACAF,EAAEC,OAAF,KAAc,EAAd,IAAoBD,EAAEE,OAAtB,GAAgC,IAAhC,CAAqC;AAArC,QACAF,EAAEC,OAAF,KAAc,EAAd,GAAmB,MAAnB,CAA0B;AAA1B,QACAD,EAAEC,OAAF,KAAc,EAAd,GAAmB,MAAnB,CAA0B;AAA1B,QACA,OAbP;AAcD;;;;;;kBA5FkBd,M","file":"editor.js","sourcesContent":["// @flow\n\nimport EventEmitter from 'eventemitter3';\n\nimport {createCustomEvent} from './utils';\nimport SearchResult from './search_result';\n\n/** @typedef */\nexport type CursorOffset = {\n  lineHeight: number;\n  top: number;\n  left?: number;\n  right?: number;\n};\n\ntype KeyCode = 'ESC' | 'ENTER' | 'UP' | 'DOWN' | 'OTHER' | 'BS' | 'META';\n\n/**\n * Abstract class representing a editor target.\n *\n * Editor classes must implement `#applySearchResult`, `#getCursorOffset`,\n * `#getBeforeCursor` and `#getAfterCursor` methods.\n *\n * @abstract\n */\nexport default class Editor extends EventEmitter {\n  /**\n   * It is called when associated textcomplete object is destroyed.\n   *\n   * @return {this}\n   */\n  destroy() {\n    return this;\n  }\n\n  /**\n   * It is called when a search result is selected by a user.\n   */\n  applySearchResult(_: SearchResult): void {\n    throw new Error('Not implemented.');\n  }\n\n  /**\n   * The input cursor's absolute coordinates from the window's left\n   * top corner.\n   */\n  getCursorOffset(): CursorOffset {\n    throw new Error('Not implemented.');\n  }\n\n  /**\n   * Editor string value from head to cursor.\n   */\n  getBeforeCursor(): string {\n    throw new Error('Not implemented.');\n  }\n\n  /**\n   * Editor string value from cursor to tail.\n   */\n  getAfterCursor(): string {\n    throw new Error('Not implemented.');\n  }\n\n  /** @private */\n  emitMoveEvent(code: 'UP' | 'DOWN'): CustomEvent {\n    const moveEvent = createCustomEvent('move', {\n      cancelable: true,\n      detail: {\n        code: code,\n      },\n    });\n    this.emit('move', moveEvent);\n    return moveEvent;\n  }\n\n  /** @private */\n  emitEnterEvent(): CustomEvent {\n    const enterEvent = createCustomEvent('enter', { cancelable: true });\n    this.emit('enter', enterEvent);\n    return enterEvent;\n  }\n\n  /** @private */\n  emitChangeEvent(): CustomEvent {\n    const changeEvent = createCustomEvent('change', {\n      detail: {\n        beforeCursor: this.getBeforeCursor(),\n      },\n    });\n    this.emit('change', changeEvent);\n    return changeEvent;\n  }\n\n  /** @private */\n  emitEscEvent(): CustomEvent {\n    const escEvent = createCustomEvent('esc', { cancelable: true });\n    this.emit('esc', escEvent);\n    return escEvent;\n  }\n\n  /** @private */\n  getCode(e: KeyboardEvent): KeyCode {\n    return e.keyCode === 8 ? 'BS' // backspace\n         : e.keyCode === 9 ? 'ENTER' // tab\n         : e.keyCode === 13 ? 'ENTER' // enter\n         : e.keyCode === 16 ? 'META' // shift\n         : e.keyCode === 17 ? 'META' // ctrl\n         : e.keyCode === 18 ? 'META' // alt\n         : e.keyCode === 27 ? 'ESC' // esc\n         : e.keyCode === 38 ? 'UP' // up\n         : e.keyCode === 40 ? 'DOWN' // down\n         : e.keyCode === 78 && e.ctrlKey ? 'DOWN' // ctrl-n\n         : e.keyCode === 80 && e.ctrlKey ? 'UP' // ctrl-p\n         : e.keyCode === 91 ? 'META' // left command\n         : e.keyCode === 93 ? 'META' // right command\n         : 'OTHER';\n  }\n}\n"]}