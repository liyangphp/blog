{"version":3,"sources":["../src/textcomplete.codemirror.js"],"names":["cm","onKeydown","bind","onKeyup","startListening","stopListening","searchResult","replace","getBeforeCursor","getAfterCursor","Array","isArray","doc","setValue","lines","split","setCursor","length","focus","el","display","cursorDiv","firstChild","offset","lineHeight","parseInt","style","height","left","top","getCursor","line","ch","getLines","linesBeforeCursor","slice","currentLineBeforeCursor","concat","join","lineSeparator","linesAfterCursor","currentLineAfterCursor","getValue","e","code","getCode","event","emitMoveEvent","emitEnterEvent","emitEscEvent","defaultPrevented","preventDefault","emitChangeEvent","on","off"],"mappings":"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","file":"textcomplete.codemirror.js","sourcesContent":["// @flow\n\nimport Editor from \"textcomplete/lib/editor\"\nimport { calculateElementOffset } from \"textcomplete/lib/utils\"\nimport SearchResult from \"textcomplete/lib/search_result\"\n\ntype CodeMirror = any\n\nexport default class extends Editor {\n  cm: CodeMirror\n\n  constructor(cm: CodeMirror) {\n    super()\n    this.cm = cm\n    ;(this: any).onKeydown = this.onKeydown.bind(this)\n    ;(this: any).onKeyup = this.onKeyup.bind(this)\n    this.startListening()\n  }\n\n  destroy() {\n    super.destroy()\n    this.stopListening()\n    this.cm = null\n    return this\n  }\n\n  applySearchResult(searchResult: SearchResult) {\n    const replace = searchResult.replace(\n      this.getBeforeCursor(),\n      this.getAfterCursor(),\n    )\n    if (Array.isArray(replace)) {\n      this.cm.doc.setValue(replace[0] + replace[1])\n      const lines = replace[0].split(\"\\n\")\n      this.cm.doc.setCursor(lines.length - 1, lines[lines.length - 1].length)\n    }\n    this.cm.focus()\n  }\n\n  getCursorOffset() {\n    const el = this.cm.display.cursorDiv.firstChild\n    const offset = calculateElementOffset(el)\n    const lineHeight = parseInt(el.style.height, 10)\n    return {\n      left: offset.left,\n      lineHeight,\n      top: offset.top + lineHeight,\n    }\n  }\n\n  getBeforeCursor() {\n    const { line, ch } = this.getCursor()\n    const lines = this.getLines()\n    const linesBeforeCursor = lines.slice(0, line)\n    const currentLineBeforeCursor = lines[line].slice(0, ch)\n    return linesBeforeCursor\n      .concat([currentLineBeforeCursor])\n      .join(this.lineSeparator())\n  }\n\n  getAfterCursor() {\n    const { line, ch } = this.getCursor()\n    const lines = this.getLines()\n    const linesAfterCursor = lines.slice(line + 1)\n    const currentLineAfterCursor = lines[line].slice(ch)\n    return [currentLineAfterCursor]\n      .concat(linesAfterCursor)\n      .join(this.lineSeparator())\n  }\n\n  /** @private */\n  getLines(): string[] {\n    return this.cm.doc.getValue().split(this.lineSeparator())\n  }\n\n  /** @private */\n  getCursor(): { line: number, ch: number } {\n    return this.cm.doc.getCursor()\n  }\n\n  /** @private */\n  lineSeparator(): string {\n    return this.cm.doc.lineSeparator()\n  }\n\n  /** @private */\n  onKeydown(cm: CodeMirror, e: KeyboardEvent) {\n    const code = this.getCode(e)\n    let event\n    if (code === \"UP\" || code === \"DOWN\") {\n      event = this.emitMoveEvent(code)\n    } else if (code === \"ENTER\") {\n      event = this.emitEnterEvent()\n    } else if (code === \"ESC\") {\n      event = this.emitEscEvent()\n    }\n    if (event && event.defaultPrevented) {\n      e.preventDefault()\n    }\n  }\n\n  /** @private */\n  onKeyup(cm: CodeMirror, e: KeyboardEvent) {\n    const code = this.getCode(e)\n    if (code !== \"DOWN\" && code !== \"UP\" && code !== \"META\") {\n      this.emitChangeEvent()\n    }\n  }\n\n  /** @private */\n  startListening() {\n    this.cm.on(\"keydown\", this.onKeydown)\n    this.cm.on(\"keyup\", this.onKeyup)\n  }\n\n  /** @private */\n  stopListening() {\n    this.cm.off(\"keydown\", this.onKeydown)\n    this.cm.off(\"keyup\", this.onKeyup)\n  }\n}\n"]}