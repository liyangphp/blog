{"ast":null,"code":"import _BackTop from \"antd/lib/back-top\";\nimport _Row from \"antd/lib/row\";\nimport _Col from \"antd/lib/col\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Head from 'next/head';\nimport TagList from '../components/TagList';\nimport LinkMe from '../components/LinkMe';\nimport { connect } from 'react-redux';\nimport User from '../components/User';\nimport axios from 'axios';\nimport servicePath from '../config/apiUrl';\nimport CodeList from '../components/CodeList';\nimport ResCommand from '../components/ResCommand';\n\nvar Resource = function Resource(props) {\n  var _useState = useState({}),\n      zhanz = _useState[0],\n      setZhanz = _useState[1];\n\n  var _useState2 = useState(true),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var getZhanInfo = function getZhanInfo() {\n    axios(servicePath.getZhanInfo).then(function (res) {\n      setIsLoading(false);\n      console.log(res.data.data);\n      setZhanz(res.data.data);\n    });\n  };\n\n  useEffect(function () {\n    if (isLoading) {\n      getZhanInfo();\n    }\n  }, []);\n  return __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(Head, null, __jsx(\"title\", null, \"\\u535A\\u4EBA\\u5802--\\u9996\\u9875\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\"\n  })), __jsx(_Row, {\n    type: \"flex\",\n    className: \"content\"\n  }, __jsx(_Col, {\n    xs: 24,\n    sm: 24,\n    md: 24,\n    lg: 19,\n    xl: 19,\n    style: {\n      padding: '1rem'\n    }\n  }, __jsx(TagList, {\n    id: 4\n  }), __jsx(CodeList, {\n    keywords: props.keywords,\n    labels: props.labels\n  })), __jsx(_Col, {\n    xs: 0,\n    sm: 0,\n    md: 0,\n    lg: 5,\n    xl: 5\n  }, __jsx(User, {\n    user: zhanz\n  }), __jsx(LinkMe, null), __jsx(ResCommand, null))), __jsx(_BackTop, null));\n};\n\nexport default connect(function mapStateToProps(state) {\n  return {\n    labels: state.labels.labels,\n    keywords: state.keywords.keywords\n  };\n})(Resource);","map":{"version":3,"sources":["/Users/mac/Desktop/liy-blog/pages/resource.js"],"names":["React","useState","useEffect","Head","TagList","LinkMe","connect","User","axios","servicePath","CodeList","ResCommand","Resource","props","zhanz","setZhanz","isLoading","setIsLoading","getZhanInfo","then","res","console","log","data","padding","keywords","labels","mapStateToProps","state"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,kBACEZ,QAAQ,CAAC,EAAD,CADV;AAAA,MACjBa,KADiB;AAAA,MACVC,QADU;;AAAA,mBAEUd,QAAQ,CAAC,IAAD,CAFlB;AAAA,MAEjBe,SAFiB;AAAA,MAENC,YAFM;;AAGxB,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBV,IAAAA,KAAK,CAACC,WAAW,CAACS,WAAb,CAAL,CAA+BC,IAA/B,CACI,UAACC,GAAD,EAAS;AACLH,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASA,IAArB;AACAR,MAAAA,QAAQ,CAACK,GAAG,CAACG,IAAJ,CAASA,IAAV,CAAR;AACH,KALL;AAOH,GARD;;AAUArB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIc,SAAJ,EAAe;AACXE,MAAAA,WAAW;AACd;AACJ,GAJQ,EAIP,EAJO,CAAT;AAKA,SAAQ;AAAK,IAAA,SAAS,EAAC;AAAf,KACJ,MAAC,IAAD,QACI,wDADJ,EAEI;AAAM,IAAA,GAAG,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC;AAAtB,IAFJ,CADI,EAKJ;AAAK,IAAA,IAAI,EAAC,MAAV;AAAiB,IAAA,SAAS,EAAC;AAA3B,KACI;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAqB,IAAA,EAAE,EAAE,EAAzB;AAA6B,IAAA,EAAE,EAAE,EAAjC;AAAqC,IAAA,EAAE,EAAE,EAAzC;AAA6C,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAO,EAAE;AAAX;AAApD,KACI,MAAC,OAAD;AAAS,IAAA,EAAE,EAAE;AAAb,IADJ,EAEI,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEX,KAAK,CAACY,QAA1B;AAAoC,IAAA,MAAM,EAAEZ,KAAK,CAACa;AAAlD,IAFJ,CADJ,EAKI;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,EAAE,EAAE,CAAhB;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,EAAE,EAAE;AAArC,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEZ;AAAZ,IADJ,EAEI,MAAC,MAAD,OAFJ,EAGI,MAAC,UAAD,OAHJ,CALJ,CALI,EAgBJ,qBAhBI,CAAR;AAkBH,CApCD;;AAsCA,eAAeR,OAAO,CAClB,SAASqB,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACHF,IAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaA,MADlB;AAEHD,IAAAA,QAAQ,EAAEG,KAAK,CAACH,QAAN,CAAeA;AAFtB,GAAP;AAIH,CANiB,CAAP,CAObb,QAPa,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Head from 'next/head'\nimport TagList from '../components/TagList'\nimport LinkMe from '../components/LinkMe'\nimport { connect } from 'react-redux'\nimport { Row, Col, BackTop } from 'antd';\nimport User from '../components/User';\nimport axios from 'axios'\nimport servicePath from '../config/apiUrl';\nimport CodeList from '../components/CodeList';\nimport ResCommand from '../components/ResCommand';\n\nconst Resource = (props) => {\n    const [zhanz, setZhanz] = useState({});\n    const [isLoading, setIsLoading] = useState(true)\n    const getZhanInfo = () => {\n        axios(servicePath.getZhanInfo).then(\n            (res) => {\n                setIsLoading(false)\n                console.log(res.data.data)\n                setZhanz(res.data.data)\n            }\n        )\n    }\n\n    useEffect(() => {\n        if (isLoading) {\n            getZhanInfo()\n        }\n    },[])\n    return (<div className=\"container\">\n        <Head>\n            <title>博人堂--首页</title>\n            <link rel=\"icon\" href=\"/favicon.ico\" />\n        </Head>\n        <Row type=\"flex\" className=\"content\">\n            <Col xs={24} sm={24} md={24} lg={19} xl={19} style={{ padding: '1rem' }}>\n                <TagList id={4} />\n                <CodeList keywords={props.keywords} labels={props.labels} />\n            </Col>\n            <Col xs={0} sm={0} md={0} lg={5} xl={5}>\n                <User user={zhanz} />\n                <LinkMe />\n                <ResCommand />\n            </Col>\n        </Row>\n        <BackTop />\n    </div>)\n}\n\nexport default connect(\n    function mapStateToProps(state) {\n        return {\n            labels: state.labels.labels,\n            keywords: state.keywords.keywords\n        }\n    }\n)(Resource)"]},"metadata":{},"sourceType":"module"}