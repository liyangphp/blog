{"ast":null,"code":"import _Icon from \"antd/lib/icon\";\nimport _message from \"antd/lib/message\";\nimport _Upload from \"antd/lib/upload\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, memo, useContext } from 'react';\nimport servicePath from '../config/apiUrl';\nimport { FmtContext } from '../pages/create';\nvar Dragger = _Upload.Dragger;\nvar UploadImage = memo(function () {\n  var _useContext = useContext(FmtContext),\n      fmt = _useContext.fmt,\n      setFmt = _useContext.setFmt;\n\n  var prop = {\n    uid: '-2',\n    name: 'upload_file',\n    multiple: false,\n    action: servicePath.uploadImage,\n    headers: {\n      'Authorization': 'Bearer ' + localStorage.getItem('token')\n    },\n    onChange: function onChange(info) {\n      var status = info.file.status;\n      console.log(status);\n\n      if (status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n\n      console.log(info);\n\n      if (status === 'done') {\n        _message.success(\"\".concat(info.file.name, \" \\u4E0A\\u4F20\\u6210\\u529F.\"));\n\n        setFmt(info.fileList[0].response.file_path);\n      } else if (status === 'error') {\n        _message.error(\"\".concat(info.file.name, \" \\u4E0A\\u4F20\\u5931\\u8D25.\"));\n      }\n    }\n  };\n  return __jsx(Dragger, prop, __jsx(\"p\", {\n    className: \"ant-upload-drag-icon\"\n  }, __jsx(_Icon, {\n    type: \"inbox\"\n  })), __jsx(\"p\", {\n    className: \"ant-upload-text\"\n  }, \"\\u70B9\\u51FB\\u6216\\u62D6\\u62FD\\u4E0A\\u4F20\\u5C01\\u9762\"));\n});\nexport default UploadImage;","map":{"version":3,"sources":["/Users/mac/Desktop/liy-blog/components/UploadImage.jsx"],"names":["React","useState","useEffect","memo","useContext","servicePath","FmtContext","Dragger","UploadImage","fmt","setFmt","prop","uid","name","multiple","action","uploadImage","headers","localStorage","getItem","onChange","info","status","file","console","log","fileList","success","response","file_path","error"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,IAArC,EAA2CC,UAA3C,QAA6D,OAA7D;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,UAAT,QAA2B,iBAA3B;IACQC,O,WAAAA,O;AACR,IAAMC,WAAW,GAAGL,IAAI,CAAC,YAAM;AAAA,oBACPC,UAAU,CAACE,UAAD,CADH;AAAA,MACtBG,GADsB,eACtBA,GADsB;AAAA,MACjBC,MADiB,eACjBA,MADiB;;AAE3B,MAAMC,IAAI,GAAG;AACTC,IAAAA,GAAG,EAAE,IADI;AAETC,IAAAA,IAAI,EAAE,aAFG;AAGTC,IAAAA,QAAQ,EAAE,KAHD;AAITC,IAAAA,MAAM,EAAEV,WAAW,CAACW,WAJX;AAKTC,IAAAA,OAAO,EAAE;AACL,uBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADxB,KALA;AAQTC,IAAAA,QARS,oBAQAC,IARA,EAQM;AAAA,UACHC,MADG,GACQD,IAAI,CAACE,IADb,CACHD,MADG;AAEXE,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,UAAIA,MAAM,KAAK,WAAf,EAA4B;AACxBE,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACE,IAAjB,EAAuBF,IAAI,CAACK,QAA5B;AACH;;AACDF,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,UAAIC,MAAM,KAAK,MAAf,EAAuB;AACnB,iBAAQK,OAAR,WAAmBN,IAAI,CAACE,IAAL,CAAUV,IAA7B;;AACAH,QAAAA,MAAM,CAACW,IAAI,CAACK,QAAL,CAAc,CAAd,EAAiBE,QAAjB,CAA0BC,SAA3B,CAAN;AACH,OAHD,MAGO,IAAIP,MAAM,KAAK,OAAf,EAAwB;AAC3B,iBAAQQ,KAAR,WAAiBT,IAAI,CAACE,IAAL,CAAUV,IAA3B;AACH;AACJ;AArBQ,GAAb;AAwBA,SACI,MAAC,OAAD,EAAaF,IAAb,EACI;AAAG,IAAA,SAAS,EAAC;AAAb,KACI;AAAM,IAAA,IAAI,EAAC;AAAX,IADJ,CADJ,EAII;AAAG,IAAA,SAAS,EAAC;AAAb,8DAJJ,CADJ;AAQH,CAlCuB,CAAxB;AAoCA,eAAeH,WAAf","sourcesContent":["import React, { useState, useEffect, memo, useContext } from 'react'\nimport {Upload, Icon, message } from 'antd'\nimport servicePath from '../config/apiUrl';\nimport { FmtContext } from '../pages/create'\nconst { Dragger } = Upload;\nconst UploadImage = memo(() => {\n    let {fmt, setFmt} = useContext(FmtContext)\n    const prop = {\n        uid: '-2',\n        name: 'upload_file',\n        multiple: false,\n        action: servicePath.uploadImage,\n        headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        },\n        onChange(info) {\n            const { status } = info.file;\n            console.log(status)\n            if (status !== 'uploading') {\n                console.log(info.file, info.fileList);\n            }\n            console.log(info)\n            if (status === 'done') {\n                message.success(`${info.file.name} 上传成功.`);\n                setFmt(info.fileList[0].response.file_path)\n            } else if (status === 'error') {\n                message.error(`${info.file.name} 上传失败.`);\n            }\n        },\n    };\n\n    return (\n        <Dragger {...prop}>\n            <p className=\"ant-upload-drag-icon\">\n                <Icon type=\"inbox\" />\n            </p>\n            <p className=\"ant-upload-text\">点击或拖拽上传封面</p>\n        </Dragger>\n    )\n})\n\nexport default UploadImage"]},"metadata":{},"sourceType":"module"}