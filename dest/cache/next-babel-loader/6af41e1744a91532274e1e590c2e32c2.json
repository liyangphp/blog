{"ast":null,"code":"import _Card from \"antd/lib/card\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport TagSelect from 'ant-design-pro/lib/TagSelect';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport servicePath from '../config/apiUrl';\n\nconst TagList = ({\n  id,\n  update_labels\n}) => {\n  const {\n    0: labs,\n    1: setLabs\n  } = useState([]);\n  const {\n    0: dataLoading,\n    1: setDataLoading\n  } = useState(true);\n\n  function handleFormSubmit(checkedValue) {\n    console.log(checkedValue);\n    update_labels(checkedValue);\n  }\n\n  const getlabs = () => {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n    axios({\n      method: 'get',\n      url: servicePath.getTags + '?id=' + id,\n      cancelToken: source.token\n    }).then(res => {\n      console.log(res.data.data);\n      source.cancel('方法被取消');\n      let labes = [];\n\n      for (let item in res.data.data) {\n        labes.push(__jsx(TagSelect.Option, {\n          key: res.data.data[item].label,\n          value: res.data.data[item].label\n        }, res.data.data[item].label));\n      }\n\n      setLabs(labes);\n      setDataLoading(false);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    if (dataLoading) {\n      getlabs();\n    }\n  }, []);\n  return __jsx(_Card, {\n    className: \"tagcard\",\n    loading: dataLoading\n  }, !dataLoading && __jsx(TagSelect, {\n    className: \"tagselect\",\n    onChange: handleFormSubmit,\n    hideCheckAll: true,\n    actionsText: {\n      expandText: '展开',\n      collapseText: '收起',\n      selectAllText: '全部'\n    },\n    expandable: true\n  }, __jsx(\"span\", {\n    className: \"all\"\n  }, \"\\u6240\\u6709\\u6807\\u7B7E\\uFF1A\"), labs));\n};\n\nexport default connect(function mapStateToProps(state) {\n  return {\n    labels: state.labels,\n    current: state.current\n  };\n}, function mapDispatchToProps(dispatch) {\n  return {\n    update: current => dispatch({\n      type: 'UPDATE_CURRENT',\n      current\n    }),\n    update_labels: labels => dispatch({\n      type: 'UPDATE_LABELS',\n      labels\n    })\n  };\n})(TagList);","map":{"version":3,"sources":["/Users/mac/Desktop/liy-blog/components/TagList.jsx"],"names":["React","useState","useEffect","TagSelect","axios","connect","servicePath","TagList","id","update_labels","labs","setLabs","dataLoading","setDataLoading","handleFormSubmit","checkedValue","console","log","getlabs","CancelToken","source","method","url","getTags","cancelToken","token","then","res","data","cancel","labes","item","push","label","catch","error","expandText","collapseText","selectAllText","mapStateToProps","state","labels","current","mapDispatchToProps","dispatch","update","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport TagSelect from 'ant-design-pro/lib/TagSelect';\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { Card } from 'antd';\nimport servicePath from '../config/apiUrl';\nconst TagList = ({id,update_labels}) => {\n    const [labs, setLabs] = useState([]);\n    const [dataLoading, setDataLoading] = useState(true)\n    function handleFormSubmit(checkedValue) {\n        console.log(checkedValue)\n        update_labels(checkedValue)\n    }\n\n    const getlabs = () => {\n        const CancelToken = axios.CancelToken;\n        const source = CancelToken.source();\n        axios({\n            method: 'get',\n            url: servicePath.getTags+'?id='+id,\n            cancelToken: source.token,\n        }).then(\n            res => {\n                console.log(res.data.data)\n                source.cancel('方法被取消');\n                let labes = [];\n                for (let item in res.data.data) {\n                    labes.push(<TagSelect.Option key={res.data.data[item].label} value={res.data.data[item].label}>{res.data.data[item].label}</TagSelect.Option>)\n                }\n                setLabs(labes)\n                setDataLoading(false)\n            }\n        ).catch(function (error) {\n            console.log(error)\n        });\n    }\n\n    useEffect(() => {\n        if(dataLoading){\n            getlabs()\n        }\n    },[])\n\n    return (\n        <Card className=\"tagcard\" loading={dataLoading}>\n            {!dataLoading && (<TagSelect\n                className=\"tagselect\"\n                onChange={handleFormSubmit}\n                hideCheckAll={true}\n                actionsText={{\n                    expandText: '展开',\n                    collapseText: '收起',\n                    selectAllText: '全部'\n                }}\n                expandable>\n                <span className=\"all\">所有标签：</span>\n                {labs}\n            </TagSelect>)}\n        </Card>\n    )\n}\n\nexport default connect(\n    function mapStateToProps(state) {\n        return {\n            labels: state.labels,\n            current: state.current,\n        }\n    },\n    function mapDispatchToProps(dispatch) {\n        return {\n            update: (current) =>dispatch({type:'UPDATE_CURRENT', current}),\n            update_labels:(labels) => dispatch({type:'UPDATE_LABELS', labels}),\n        }\n    }\n)(TagList)"]},"metadata":{},"sourceType":"module"}