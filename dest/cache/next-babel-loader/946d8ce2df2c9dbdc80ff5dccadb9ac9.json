{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport '../public/style/comm.css';\nimport 'antd/dist/antd.css';\nimport 'ant-design-pro/dist/ant-design-pro.css';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport Layout from '../components/Layout';\nimport store from '../store/store';\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps;\n      return __jsx(Layout, null, __jsx(Provider, {\n        store: store\n      }, __jsx(Component, pageProps)));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    // App组件的getInitialProps比较特殊\n    // 能拿到一些额外的参数\n    // Component: 被包裹的组件\n    value: function getInitialProps(ctx) {\n      var Component, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = ctx.Component;\n              pageProps = {}; // 拿到Component上定义的getInitialProps\n\n              if (!Component.getInitialProps) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 5:\n              pageProps = _context.sent;\n\n            case 6:\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport { MyApp as default };","map":{"version":3,"sources":["/Users/mac/Desktop/liy-blog/pages/_app.js"],"names":["App","React","Provider","Layout","store","MyApp","props","Component","pageProps","ctx","getInitialProps"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAO,0BAAP;AACA,OAAO,oBAAP;AACA,OAAO,wCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;IAEqBC,K;;;;;;;;;;;;;6BAoBR;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACGC,SADH,eACGA,SADH;AAAA,UACcC,SADd,eACcA,SADd;AAEL,aACI,MAAC,MAAD,QACI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAIJ;AAAnB,SACI,MAAC,SAAD,EAAeI,SAAf,CADJ,CADJ,CADJ;AAOH;;;AA5BD;AACA;AACA;oCAC6BC,G;;;;;;AACjBF,cAAAA,S,GAAcE,G,CAAdF,S;AACJC,cAAAA,S,GAAY,E,EAEhB;;mBACID,SAAS,CAACG,e;;;;;;+CAEQH,SAAS,CAACG,eAAV,CAA0BD,GAA1B,C;;;AAAlBD,cAAAA,S;;;+CAIG;AACHA,gBAAAA,SAAS,EAATA;AADG,e;;;;;;;;;;;;EAfoBR,G;;SAAdK,K","sourcesContent":["import App from 'next/app'\nimport '../public/style/comm.css'\nimport 'antd/dist/antd.css'\nimport 'ant-design-pro/dist/ant-design-pro.css'\nimport React from 'react'\nimport { Provider } from 'react-redux'\n\nimport Layout from '../components/Layout'\nimport store from '../store/store';\n\nexport default class MyApp extends App {\n    // App组件的getInitialProps比较特殊\n    // 能拿到一些额外的参数\n    // Component: 被包裹的组件\n    static async getInitialProps(ctx) {\n        const { Component } = ctx\n        let pageProps = {}\n\n        // 拿到Component上定义的getInitialProps\n        if (Component.getInitialProps) {\n            // 执行拿到返回结果\n            pageProps = await Component.getInitialProps(ctx)\n        }\n\n        // 返回给组件\n        return {\n            pageProps,\n        }\n    }\n\n    render() {\n        const { Component, pageProps } = this.props\n        return (\n            <Layout>\n                <Provider store = {store}>\n                    <Component {...pageProps} />\n                </Provider>\n            </Layout>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}