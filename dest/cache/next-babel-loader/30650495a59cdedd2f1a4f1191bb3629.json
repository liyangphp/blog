{"ast":null,"code":"import _Spin from \"antd/lib/spin\";\nimport _Card from \"antd/lib/card\";\nimport _Button from \"antd/lib/button\";\nimport _Input from \"antd/lib/input\";\nimport _Icon from \"antd/lib/icon\";\nimport _message from \"antd/lib/message\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext, createContext } from 'react';\nimport axios from 'axios';\nimport servicePath from '../config/apiUrl';\nimport Router from 'next/router';\n\nfunction Register(props) {\n  const {\n    0: userName,\n    1: setUserName\n  } = useState('');\n  const {\n    0: email,\n    1: setEmail\n  } = useState('');\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  const {\n    0: repassword,\n    1: setRepassword\n  } = useState('');\n  const {\n    0: isLoading,\n    1: setIsLoading\n  } = useState(false);\n\n  const Register = () => {\n    setIsLoading(true);\n    const reg = /^([a-zA-Z]|[0-9])(\\w|\\-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/;\n\n    if (!userName) {\n      _message.error('用户名不能为空');\n\n      return false;\n    } else if (!email) {\n      _message.error('邮箱不能为空');\n\n      return false;\n    } else if (!password) {\n      _message.error('密码不能为空');\n\n      return false;\n    } else if (!repassword) {\n      _message.error('确认密码不能为空');\n\n      return false;\n    } else if (!reg.test(email)) {\n      _message.error('邮箱格式不正确');\n\n      return false;\n    }\n\n    let dataProps = {\n      'username': userName,\n      'email': email,\n      'password': password,\n      'password_confirmation': repassword\n    };\n    console.log(password === repassword);\n    axios({\n      method: 'post',\n      url: servicePath.registerUser,\n      data: dataProps,\n      withCredentials: false,\n      transformResponse: function (data) {\n        if (data.indexOf('errors') != -1) {\n          data = JSON.parse(data);\n\n          for (var item in data.errors) {\n            _message.error(data.errors[item][0]);\n          }\n        } else {\n          return data;\n        }\n      }\n    }).then(res => {\n      console.log(res);\n      setIsLoading(false);\n\n      if (res.status == '201') {\n        Router.push('/login');\n      } else {\n        _message.error('注册失败');\n      }\n    }).catch(function (error) {// console.log(error)\n      // message.error(error.status)\n    });\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  }; // const form=createContext({})\n  // const { getFieldDecorator } = useContext(form);\n\n\n  return __jsx(\"div\", {\n    className: \"login-div\"\n  }, __jsx(_Spin, {\n    tip: \"Loading...\",\n    spinning: isLoading\n  }, __jsx(_Card, {\n    title: \"\\u535A\\u4EBA\\u5802\\u6CE8\\u518C\",\n    bordered: true,\n    style: {\n      width: 400,\n      margin: '0 auto'\n    }\n  }, __jsx(_Input, {\n    id: \"userName\",\n    size: \"large\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u4F60\\u7684\\u7528\\u6237\\u540D\",\n    prefix: __jsx(_Icon, {\n      type: \"user\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      }\n    }),\n    onChange: e => {\n      setUserName(e.target.value);\n    }\n  }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(_Input, {\n    id: \"email\",\n    size: \"large\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u4F60\\u7684\\u90AE\\u7BB1\",\n    prefix: __jsx(_Icon, {\n      type: \"mail\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      }\n    }),\n    onChange: e => {\n      setEmail(e.target.value);\n    }\n  }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(_Input.Password, {\n    id: \"password\",\n    size: \"large\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u4F60\\u7684\\u5BC6\\u7801\",\n    prefix: __jsx(_Icon, {\n      type: \"key\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      }\n    }),\n    onChange: e => {\n      setPassword(e.target.value);\n    }\n  }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(_Input.Password, {\n    id: \"repassword\",\n    size: \"large\",\n    placeholder: \"\\u8BF7\\u786E\\u8BA4\\u4F60\\u7684\\u5BC6\\u7801\",\n    prefix: __jsx(_Icon, {\n      type: \"unlock\",\n      style: {\n        color: 'rgba(0,0,0,.25)'\n      }\n    }),\n    onChange: e => {\n      setRepassword(e.target.value);\n    }\n  }), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(_Button, {\n    type: \"primary\",\n    size: \"large\",\n    block: true,\n    onClick: Register\n  }, \" \\u6CE8\\u518C \"), __jsx(\"br\", null), __jsx(\"br\", null), __jsx(\"div\", null, __jsx(\"a\", {\n    style: {\n      float: 'right'\n    },\n    href: \"/login\"\n  }, \"\\u5DF2\\u6709\\u8D26\\u6237\\uFF1F\\u8BF7\\u767B\\u5F55\")))));\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/mac/Desktop/liy-blog/pages/register.js"],"names":["React","useState","useContext","createContext","axios","servicePath","Router","Register","props","userName","setUserName","email","setEmail","password","setPassword","repassword","setRepassword","isLoading","setIsLoading","reg","error","test","dataProps","console","log","method","url","registerUser","data","withCredentials","transformResponse","indexOf","JSON","parse","item","errors","then","res","status","push","catch","setTimeout","width","margin","color","e","target","value","float"],"mappings":"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","sourcesContent":["import React, { useState, useContext, createContext } from 'react';\nimport axios from 'axios'\nimport { Card, Input, Icon, Button, Spin, message } from 'antd';\nimport servicePath from '../config/apiUrl';\nimport Router from 'next/router'\nfunction Register(props) {\n    const [userName, setUserName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [repassword, setRepassword] = useState('')\n    const [isLoading, setIsLoading] = useState(false)\n\n    const Register = () => {\n        setIsLoading(true)\n        const reg = /^([a-zA-Z]|[0-9])(\\w|\\-)+@[a-zA-Z0-9]+\\.([a-zA-Z]{2,4})$/;\n        if (!userName) {\n            message.error('用户名不能为空')\n            return false\n        } else if (!email) {\n            message.error('邮箱不能为空')\n            return false\n        } else if (!password) {\n            message.error('密码不能为空')\n            return false\n        } else if (!repassword) {\n            message.error('确认密码不能为空')\n            return false\n        } else if (!reg.test(email)) {\n            message.error('邮箱格式不正确')\n            return false\n        }\n\n        let dataProps = {\n            'username': userName,\n            'email': email,\n            'password': password,\n            'password_confirmation': repassword,\n        }\n        console.log(password === repassword)\n\n        axios({\n            method: 'post',\n            url: servicePath.registerUser,\n            data: dataProps,\n            withCredentials: false,\n            transformResponse: function (data) {\n                if (data.indexOf('errors') != -1) {\n                    data = JSON.parse(data);\n                    for (var item in data.errors) {\n                        message.error(data.errors[item][0]);\n                    }\n                } else {\n                    return data;\n                }\n            }\n        }).then(\n            res => {\n                console.log(res)\n                setIsLoading(false)\n                if (res.status == '201') {\n                    Router.push('/login')\n                } else {\n                    message.error('注册失败')\n                }\n            }\n        ).catch(function (error) {\n            // console.log(error)\n            // message.error(error.status)\n        });\n\n\n\n        setTimeout(() => {\n            setIsLoading(false)\n        }, 1000)\n    }\n\n    // const form=createContext({})\n\n    // const { getFieldDecorator } = useContext(form);\n\n    return (\n        <div className=\"login-div\">\n            <Spin tip=\"Loading...\" spinning={isLoading}>\n                <Card title=\"博人堂注册\" bordered={true} style={{ width: 400, margin: '0 auto' }} >\n\n                    <Input\n                        id=\"userName\"\n                        size=\"large\"\n                        placeholder=\"请输入你的用户名\"\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        onChange={(e) => { setUserName(e.target.value) }}\n                    />\n                    <br /><br />\n                    <Input\n                        id=\"email\"\n                        size=\"large\"\n                        placeholder=\"请输入你的邮箱\"\n                        prefix={<Icon type=\"mail\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        onChange={(e) => { setEmail(e.target.value) }}\n                    />\n\n\n\n                    <br /><br />\n                    <Input.Password\n                        id=\"password\"\n                        size=\"large\"\n                        placeholder=\"请输入你的密码\"\n                        prefix={<Icon type=\"key\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        onChange={(e) => { setPassword(e.target.value) }}\n                    />\n                    <br /><br />\n                    <Input.Password\n                        id=\"repassword\"\n                        size=\"large\"\n                        placeholder=\"请确认你的密码\"\n                        prefix={<Icon type=\"unlock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        onChange={(e) => { setRepassword(e.target.value) }}\n                    />\n                    <br /><br />\n                    <Button type=\"primary\" size=\"large\" block onClick={Register} > 注册 </Button>\n                    <br /><br />\n                    <div>\n                        <a style={{ float: 'right' }} href=\"/login\">\n                            已有账户？请登录\n                        </a>\n                    </div>\n                </Card>\n            </Spin>\n        </div>\n    )\n}\nexport default Register"]},"metadata":{},"sourceType":"module"}