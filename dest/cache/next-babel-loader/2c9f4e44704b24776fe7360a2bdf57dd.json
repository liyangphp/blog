{"ast":null,"code":"import _Card from \"antd/lib/card\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport TagSelect from 'ant-design-pro/lib/TagSelect';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport servicePath from '../config/apiUrl';\n\nvar TagList = function TagList(_ref) {\n  var id = _ref.id,\n      update_labels = _ref.update_labels,\n      labels = _ref.labels;\n  console.log('labels', labels);\n\n  var _useState = useState([]),\n      labs = _useState[0],\n      setLabs = _useState[1];\n\n  var _useState2 = useState(true),\n      dataLoading = _useState2[0],\n      setDataLoading = _useState2[1];\n\n  function handleFormSubmit(checkedValue) {\n    console.log(checkedValue);\n    update_labels(checkedValue);\n  }\n\n  var getlabs = function getlabs() {\n    var CancelToken = axios.CancelToken;\n    var source = CancelToken.source();\n    axios({\n      method: 'get',\n      url: servicePath.getTags + '?id=' + id,\n      cancelToken: source.token\n    }).then(function (res) {\n      console.log(res.data.data);\n      source.cancel('方法被取消');\n      var labes = [];\n\n      for (var item in res.data.data) {\n        labes.push(__jsx(TagSelect.Option, {\n          key: res.data.data[item].label,\n          value: res.data.data[item].label\n        }, res.data.data[item].label));\n      }\n\n      setLabs(labes);\n      setDataLoading(false);\n    })[\"catch\"](function (error) {\n      console.log(error);\n    });\n  };\n\n  useEffect(function () {\n    if (dataLoading) {\n      getlabs();\n    }\n  }, []);\n  return __jsx(_Card, {\n    className: \"tagcard\",\n    loading: dataLoading\n  }, !dataLoading && __jsx(TagSelect, {\n    className: \"tagselect\",\n    onChange: handleFormSubmit,\n    hideCheckAll: true,\n    actionsText: {\n      expandText: '展开',\n      collapseText: '收起',\n      selectAllText: '全部'\n    },\n    expandable: true\n  }, __jsx(\"span\", {\n    className: \"all\"\n  }, \"\\u6240\\u6709\\u6807\\u7B7E\\uFF1A\"), labs));\n};\n\nexport default connect(function mapStateToProps(state) {\n  return {\n    labels: state.labels,\n    current: state.current\n  };\n}, function mapDispatchToProps(dispatch) {\n  return {\n    update: function update(current) {\n      return dispatch({\n        type: 'UPDATE_CURRENT',\n        current: current\n      });\n    },\n    update_labels: function update_labels(labels) {\n      return dispatch({\n        type: 'UPDATE_LABELS',\n        labels: labels\n      });\n    }\n  };\n})(TagList);","map":{"version":3,"sources":["/Users/mac/Desktop/liy-blog/components/TagList.jsx"],"names":["React","useState","useEffect","TagSelect","axios","connect","servicePath","TagList","id","update_labels","labels","console","log","labs","setLabs","dataLoading","setDataLoading","handleFormSubmit","checkedValue","getlabs","CancelToken","source","method","url","getTags","cancelToken","token","then","res","data","cancel","labes","item","push","label","error","expandText","collapseText","selectAllText","mapStateToProps","state","current","mapDispatchToProps","dispatch","update","type"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAA+B;AAAA,MAA7BC,EAA6B,QAA7BA,EAA6B;AAAA,MAA1BC,aAA0B,QAA1BA,aAA0B;AAAA,MAAZC,MAAY,QAAZA,MAAY;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,MAAtB;;AAD2C,kBAEnBT,QAAQ,CAAC,EAAD,CAFW;AAAA,MAEpCY,IAFoC;AAAA,MAE9BC,OAF8B;;AAAA,mBAGLb,QAAQ,CAAC,IAAD,CAHH;AAAA,MAGpCc,WAHoC;AAAA,MAGvBC,cAHuB;;AAI3C,WAASC,gBAAT,CAA0BC,YAA1B,EAAwC;AACpCP,IAAAA,OAAO,CAACC,GAAR,CAAYM,YAAZ;AACAT,IAAAA,aAAa,CAACS,YAAD,CAAb;AACH;;AAED,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAClB,QAAMC,WAAW,GAAGhB,KAAK,CAACgB,WAA1B;AACA,QAAMC,MAAM,GAAGD,WAAW,CAACC,MAAZ,EAAf;AACAjB,IAAAA,KAAK,CAAC;AACFkB,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAEjB,WAAW,CAACkB,OAAZ,GAAoB,MAApB,GAA2BhB,EAF9B;AAGFiB,MAAAA,WAAW,EAAEJ,MAAM,CAACK;AAHlB,KAAD,CAAL,CAIGC,IAJH,CAKI,UAAAC,GAAG,EAAI;AACHjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,GAAG,CAACC,IAAJ,CAASA,IAArB;AACAR,MAAAA,MAAM,CAACS,MAAP,CAAc,OAAd;AACA,UAAIC,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAIC,IAAT,IAAiBJ,GAAG,CAACC,IAAJ,CAASA,IAA1B,EAAgC;AAC5BE,QAAAA,KAAK,CAACE,IAAN,CAAW,MAAC,SAAD,CAAW,MAAX;AAAkB,UAAA,GAAG,EAAEL,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcG,IAAd,EAAoBE,KAA3C;AAAkD,UAAA,KAAK,EAAEN,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcG,IAAd,EAAoBE;AAA7E,WAAqFN,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcG,IAAd,EAAoBE,KAAzG,CAAX;AACH;;AACDpB,MAAAA,OAAO,CAACiB,KAAD,CAAP;AACAf,MAAAA,cAAc,CAAC,KAAD,CAAd;AACH,KAdL,WAeQ,UAAUmB,KAAV,EAAiB;AACrBxB,MAAAA,OAAO,CAACC,GAAR,CAAYuB,KAAZ;AACH,KAjBD;AAkBH,GArBD;;AAuBAjC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGa,WAAH,EAAe;AACXI,MAAAA,OAAO;AACV;AACJ,GAJQ,EAIP,EAJO,CAAT;AAMA,SACI;AAAM,IAAA,SAAS,EAAC,SAAhB;AAA0B,IAAA,OAAO,EAAEJ;AAAnC,KACK,CAACA,WAAD,IAAiB,MAAC,SAAD;AACd,IAAA,SAAS,EAAC,WADI;AAEd,IAAA,QAAQ,EAAEE,gBAFI;AAGd,IAAA,YAAY,EAAE,IAHA;AAId,IAAA,WAAW,EAAE;AACTmB,MAAAA,UAAU,EAAE,IADH;AAETC,MAAAA,YAAY,EAAE,IAFL;AAGTC,MAAAA,aAAa,EAAE;AAHN,KAJC;AASd,IAAA,UAAU;AATI,KAUd;AAAM,IAAA,SAAS,EAAC;AAAhB,sCAVc,EAWbzB,IAXa,CADtB,CADJ;AAiBH,CAvDD;;AAyDA,eAAeR,OAAO,CAClB,SAASkC,eAAT,CAAyBC,KAAzB,EAAgC;AAC5B,SAAO;AACH9B,IAAAA,MAAM,EAAE8B,KAAK,CAAC9B,MADX;AAEH+B,IAAAA,OAAO,EAAED,KAAK,CAACC;AAFZ,GAAP;AAIH,CANiB,EAOlB,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHC,IAAAA,MAAM,EAAE,gBAACH,OAAD;AAAA,aAAYE,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAC,gBAAN;AAAwBJ,QAAAA,OAAO,EAAPA;AAAxB,OAAD,CAApB;AAAA,KADL;AAEHhC,IAAAA,aAAa,EAAC,uBAACC,MAAD;AAAA,aAAYiC,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAC,eAAN;AAAuBnC,QAAAA,MAAM,EAANA;AAAvB,OAAD,CAApB;AAAA;AAFX,GAAP;AAIH,CAZiB,CAAP,CAabH,OAba,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport TagSelect from 'ant-design-pro/lib/TagSelect';\nimport axios from 'axios'\nimport { connect } from 'react-redux'\nimport { Card } from 'antd';\nimport servicePath from '../config/apiUrl';\nconst TagList = ({id,update_labels,labels}) => {\n    console.log('labels', labels)\n    const [labs, setLabs] = useState([]);\n    const [dataLoading, setDataLoading] = useState(true)\n    function handleFormSubmit(checkedValue) {\n        console.log(checkedValue)\n        update_labels(checkedValue)\n    }\n\n    const getlabs = () => {\n        const CancelToken = axios.CancelToken;\n        const source = CancelToken.source();\n        axios({\n            method: 'get',\n            url: servicePath.getTags+'?id='+id,\n            cancelToken: source.token,\n        }).then(\n            res => {\n                console.log(res.data.data)\n                source.cancel('方法被取消');\n                let labes = [];\n                for (let item in res.data.data) {\n                    labes.push(<TagSelect.Option key={res.data.data[item].label} value={res.data.data[item].label}>{res.data.data[item].label}</TagSelect.Option>)\n                }\n                setLabs(labes)\n                setDataLoading(false)\n            }\n        ).catch(function (error) {\n            console.log(error)\n        });\n    }\n\n    useEffect(() => {\n        if(dataLoading){\n            getlabs()\n        }\n    },[])\n\n    return (\n        <Card className=\"tagcard\" loading={dataLoading}>\n            {!dataLoading && (<TagSelect\n                className=\"tagselect\"\n                onChange={handleFormSubmit}\n                hideCheckAll={true}\n                actionsText={{\n                    expandText: '展开',\n                    collapseText: '收起',\n                    selectAllText: '全部'\n                }}\n                expandable>\n                <span className=\"all\">所有标签：</span>\n                {labs}\n            </TagSelect>)}\n        </Card>\n    )\n}\n\nexport default connect(\n    function mapStateToProps(state) {\n        return {\n            labels: state.labels,\n            current: state.current,\n        }\n    },\n    function mapDispatchToProps(dispatch) {\n        return {\n            update: (current) =>dispatch({type:'UPDATE_CURRENT', current}),\n            update_labels:(labels) => dispatch({type:'UPDATE_LABELS', labels}),\n        }\n    }\n)(TagList)"]},"metadata":{},"sourceType":"module"}