{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nvar initialState = {\n  count: 0\n};\nvar userInitialState = {\n  username: 'ly'\n};\n\nfunction add(num) {\n  return {\n    type: ADD,\n    num: num\n  };\n}\n\nfunction addAsync(num) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(add(num));\n    }, 1000);\n  };\n}\n\nvar ADD = 'ADD';\n\nfunction counterReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD:\n      return {\n        count: state.count + (action.num || 1)\n      };\n\n    default:\n      return state;\n  }\n}\n\nvar UPDATE_USERNAME = 'UPDATE_USERNAME';\n\nfunction userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_USERNAME:\n      return _objectSpread({}, state, {\n        username: action.name\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar allReducers = combineReducers({\n  counter: counterReducer,\n  user: userReducer\n});\nvar store = createStore(allReducers, {\n  counter: initialState,\n  user: userInitialState\n}, applyMiddleware(ReduxThunk));\nconsole.log(store.getState());\nstore.subscribe(function () {\n  console, log(store.getState());\n});\nstore.dispatch(add(3));\nstore.dispatch(addAsync(5));\nstore.dispatch({\n  type: ADD\n});\nconsole.log(store.getState());\nexport default store;","map":{"version":3,"sources":["/Users/mac/Desktop/liy-blog/store/store.js"],"names":["createStore","combineReducers","applyMiddleware","ReduxThunk","initialState","count","userInitialState","username","add","num","type","ADD","addAsync","dispatch","setTimeout","counterReducer","state","action","UPDATE_USERNAME","userReducer","name","allReducers","counter","user","store","console","log","getState","subscribe"],"mappings":";;;;;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAArB;AAIA,IAAMC,gBAAgB,GAAG;AACrBC,EAAAA,QAAQ,EAAC;AADY,CAAzB;;AAIA,SAASC,GAAT,CAAaC,GAAb,EAAkB;AACd,SAAO;AACHC,IAAAA,IAAI,EAAEC,GADH;AAEHF,IAAAA,GAAG,EAAHA;AAFG,GAAP;AAIH;;AAED,SAASG,QAAT,CAAkBH,GAAlB,EAAuB;AACnB,SAAO,UAACI,QAAD,EAAc;AACjBC,IAAAA,UAAU,CAAC,YAAI;AACXD,MAAAA,QAAQ,CAACL,GAAG,CAACC,GAAD,CAAJ,CAAR;AACH,KAFS,EAER,IAFQ,CAAV;AAGH,GAJD;AAKH;;AAGD,IAAME,GAAG,GAAG,KAAZ;;AACA,SAASI,cAAT,GAAqD;AAAA,MAA7BC,KAA6B,uEAArBZ,YAAqB;AAAA,MAAPa,MAAO;;AACjD,UAAQA,MAAM,CAACP,IAAf;AACI,SAAKC,GAAL;AACI,aAAO;AAAEN,QAAAA,KAAK,EAAEW,KAAK,CAACX,KAAN,IAAeY,MAAM,CAACR,GAAP,IAAc,CAA7B;AAAT,OAAP;;AACJ;AACI,aAAOO,KAAP;AAJR;AAMH;;AAED,IAAME,eAAe,GAAG,iBAAxB;;AAEA,SAASC,WAAT,GAAsD;AAAA,MAAjCH,KAAiC,uEAAzBV,gBAAyB;AAAA,MAAPW,MAAO;;AAClD,UAAQA,MAAM,CAACP,IAAf;AACI,SAAKQ,eAAL;AACI,+BACOF,KADP;AAEIT,QAAAA,QAAQ,EAACU,MAAM,CAACG;AAFpB;;AAIJ;AACI,aAAOJ,KAAP;AAPR;AASH;;AAMD,IAAMK,WAAW,GAAGpB,eAAe,CAAC;AAChCqB,EAAAA,OAAO,EAACP,cADwB;AAEhCQ,EAAAA,IAAI,EAACJ;AAF2B,CAAD,CAAnC;AAKA,IAAMK,KAAK,GAAExB,WAAW,CACpBqB,WADoB,EAEpB;AACAC,EAAAA,OAAO,EAAElB,YADT;AAEAmB,EAAAA,IAAI,EAAEjB;AAFN,CAFoB,EAMpBJ,eAAe,CAACC,UAAD,CANK,CAAxB;AASAsB,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,EAAZ;AAEAH,KAAK,CAACI,SAAN,CAAgB,YAAI;AAChBH,EAAAA,OAAO,EAACC,GAAG,CAACF,KAAK,CAACG,QAAN,EAAD,CAAX;AACH,CAFD;AAIAH,KAAK,CAACX,QAAN,CAAeL,GAAG,CAAC,CAAD,CAAlB;AAEAgB,KAAK,CAACX,QAAN,CAAeD,QAAQ,CAAC,CAAD,CAAvB;AAEAY,KAAK,CAACX,QAAN,CAAe;AAAEH,EAAAA,IAAI,EAACC;AAAP,CAAf;AAEAc,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,EAAZ;AAIA,eAAeH,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk'\n\nconst initialState = {\n    count: 0\n}\n\nconst userInitialState = {\n    username:'ly'\n}\n\nfunction add(num) {\n    return {\n        type: ADD,\n        num,\n    }\n}\n\nfunction addAsync(num) {\n    return (dispatch) => {\n        setTimeout(()=>{\n            dispatch(add(num))\n        },1000)\n    }\n}\n\n\nconst ADD = 'ADD'\nfunction counterReducer(state = initialState, action){\n    switch (action.type){\n        case ADD:\n            return { count: state.count + (action.num || 1) }\n        default:\n            return state\n    }\n}\n\nconst UPDATE_USERNAME = 'UPDATE_USERNAME'\n\nfunction userReducer(state = userInitialState, action){\n    switch (action.type){\n        case UPDATE_USERNAME:\n            return {\n                ...state,\n                username:action.name\n            }\n        default:\n            return state\n    }\n}\n\n\n\n\n\nconst allReducers = combineReducers({\n    counter:counterReducer,\n    user:userReducer\n})\n\nconst store =createStore(\n    allReducers, \n    {\n    counter: initialState,\n    user: userInitialState\n    },\n    applyMiddleware(ReduxThunk),\n)\n\nconsole.log(store.getState())\n\nstore.subscribe(()=>{\n    console,log(store.getState())\n})\n\nstore.dispatch(add(3))\n\nstore.dispatch(addAsync(5))\n\nstore.dispatch({ type:ADD })\n\nconsole.log(store.getState())\n\n\n\nexport default store"]},"metadata":{},"sourceType":"module"}