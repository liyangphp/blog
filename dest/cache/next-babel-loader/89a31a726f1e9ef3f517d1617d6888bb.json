{"ast":null,"code":"import _Modal from \"antd/lib/modal\";\nimport _Icon from \"antd/lib/icon\";\nimport _message from \"antd/lib/message\";\nimport _Upload from \"antd/lib/upload\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport servicePath from '../config/apiUrl';\nvar Dragger = _Upload.Dragger;\n\nvar Modals = function Modals() {\n  var pr = {\n    uid: '-1',\n    name: 'file',\n    multiple: false,\n    action: servicePath.uploadArticleImage,\n    headers: {\n      'Authorization': 'Bearer ' + localStorage.getItem('token')\n    },\n    onChange: function onChange(info) {\n      console.log('info', info);\n      var status = info.file.status;\n\n      if (status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n\n      if (status === 'done') {\n        _message.success(\"\".concat(info.file.name, \" \\u4E0A\\u4F20\\u6210\\u529F.\"));\n\n        var valuefile = mdeValue + \"![file](\".concat(info.file.response.file_path, \")\");\n        console.log(valuefile);\n        setMdeValue(valuefile);\n        setVisible(false);\n      } else if (status === 'error') {\n        _message.error(\"\".concat(info.file.name, \" file upload failed.\"));\n      }\n    }\n  };\n  return __jsx(_Modal, {\n    footer: null,\n    title: \"\\u4E0A\\u4F20\\u56FE\\u7247\",\n    visible: visible,\n    onCancel: handleCancel\n  }, __jsx(Dragger, pr, __jsx(\"p\", {\n    className: \"ant-upload-drag-icon\"\n  }, __jsx(_Icon, {\n    type: \"inbox\"\n  })), __jsx(\"p\", {\n    className: \"ant-upload-text\"\n  }, \"\\u70B9\\u51FB\\u6216\\u62D6\\u62FD\\u4E0A\\u4F20\\u56FE\\u7247\"), __jsx(\"p\", {\n    className: \"ant-upload-hint\"\n  }, \"\\u652F\\u6301\\u5355\\u6B21\\u6216\\u6279\\u91CF\\u4E0A\\u4F20\\u3002\\u652F\\u6301\\u56FE\\u7247\\u683C\\u5F0F\\u6587\\u4EF6\")));\n};\n\nexport default Modals;","map":{"version":3,"sources":["/Users/mac/Desktop/liy-blog/components/Modals.jsx"],"names":["React","useState","useEffect","servicePath","Dragger","Modals","pr","uid","name","multiple","action","uploadArticleImage","headers","localStorage","getItem","onChange","info","console","log","status","file","fileList","success","valuefile","mdeValue","response","file_path","setMdeValue","setVisible","error","visible","handleCancel"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;IACQC,O,WAAAA,O;;AAER,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,MAAMC,EAAE,GAAG;AACPC,IAAAA,GAAG,EAAE,IADE;AAEPC,IAAAA,IAAI,EAAE,MAFC;AAGPC,IAAAA,QAAQ,EAAE,KAHH;AAIPC,IAAAA,MAAM,EAAEP,WAAW,CAACQ,kBAJb;AAKPC,IAAAA,OAAO,EAAE;AACL,uBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADxB,KALF;AAQPC,IAAAA,QARO,oBAQEC,IARF,EAQQ;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AADW,UAEHG,MAFG,GAEQH,IAAI,CAACI,IAFb,CAEHD,MAFG;;AAIX,UAAIA,MAAM,KAAK,WAAf,EAA4B;AACxBF,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACI,IAAjB,EAAuBJ,IAAI,CAACK,QAA5B;AACH;;AACD,UAAIF,MAAM,KAAK,MAAf,EAAuB;AACnB,iBAAQG,OAAR,WAAmBN,IAAI,CAACI,IAAL,CAAUZ,IAA7B;;AACA,YAAIe,SAAS,GAAGC,QAAQ,qBAAcR,IAAI,CAACI,IAAL,CAAUK,QAAV,CAAmBC,SAAjC,MAAxB;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYK,SAAZ;AACAI,QAAAA,WAAW,CAACJ,SAAD,CAAX;AACAK,QAAAA,UAAU,CAAC,KAAD,CAAV;AACH,OAND,MAMO,IAAIT,MAAM,KAAK,OAAf,EAAwB;AAC3B,iBAAQU,KAAR,WAAiBb,IAAI,CAACI,IAAL,CAAUZ,IAA3B;AACH;AACJ;AAxBM,GAAX;AA2BA,SACI;AACI,IAAA,MAAM,EAAE,IADZ;AAEI,IAAA,KAAK,EAAC,0BAFV;AAGI,IAAA,OAAO,EAAEsB,OAHb;AAGsB,IAAA,QAAQ,EAAEC;AAHhC,KAKI,MAAC,OAAD,EAAazB,EAAb,EACI;AAAG,IAAA,SAAS,EAAC;AAAb,KACI;AAAM,IAAA,IAAI,EAAC;AAAX,IADJ,CADJ,EAII;AAAG,IAAA,SAAS,EAAC;AAAb,8DAJJ,EAKI;AAAG,IAAA,SAAS,EAAC;AAAb,oHALJ,CALJ,CADJ;AAiBH,CA7CD;;AA+CA,eAAeD,MAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Upload, Icon, message, Modal } from 'antd'\nimport servicePath from '../config/apiUrl';\nconst { Dragger } = Upload;\n\nconst Modals = () => {\n    const pr = {\n        uid: '-1',\n        name: 'file',\n        multiple: false,\n        action: servicePath.uploadArticleImage,\n        headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token'),\n        },\n        onChange(info) {\n            console.log('info', info)\n            const { status } = info.file;\n\n            if (status !== 'uploading') {\n                console.log(info.file, info.fileList);\n            }\n            if (status === 'done') {\n                message.success(`${info.file.name} 上传成功.`);\n                let valuefile = mdeValue + `![file](${info.file.response.file_path})`;\n                console.log(valuefile)\n                setMdeValue(valuefile)\n                setVisible(false)\n            } else if (status === 'error') {\n                message.error(`${info.file.name} file upload failed.`);\n            }\n        },\n    };\n\n    return (\n        <Modal\n            footer={null}\n            title=\"上传图片\"\n            visible={visible} onCancel={handleCancel}>\n\n            <Dragger {...pr}>\n                <p className=\"ant-upload-drag-icon\">\n                    <Icon type=\"inbox\" />\n                </p>\n                <p className=\"ant-upload-text\">点击或拖拽上传图片</p>\n                <p className=\"ant-upload-hint\">\n                    支持单次或批量上传。支持图片格式文件\n                    </p>\n            </Dragger>\n        </Modal>\n    )\n}\n\nexport default Modals"]},"metadata":{},"sourceType":"module"}