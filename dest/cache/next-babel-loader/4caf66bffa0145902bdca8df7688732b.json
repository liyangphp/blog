{"ast":null,"code":"import _Card from \"antd/lib/card\";\nimport _message from \"antd/lib/message\";\nimport _List from \"antd/lib/list\";\nimport _Comment from \"antd/lib/comment\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport NoticeIcon from 'ant-design-pro/lib/NoticeIcon';\nimport axios from \"axios\";\nimport servicePath from '../config/apiUrl';\nimport Router from 'next/router';\n\nconst NoticeView = () => {\n  const {\n    0: data,\n    1: setData\n  } = useState([]);\n  const {\n    0: user,\n    1: setUser\n  } = useState();\n  const {\n    0: notifications,\n    1: setNotifications\n  } = useState(0);\n  const {\n    0: systems,\n    1: setSystems\n  } = useState(0);\n  const {\n    0: messages,\n    1: setMessages\n  } = useState(0);\n  const {\n    0: tabKey,\n    1: setTabKey\n  } = useState(\"notification\");\n\n  const onTabChange = key => {\n    setTabKey(key);\n  };\n\n  const operationTabList = [{\n    key: 'notification',\n    tab: __jsx(\"span\", null, \"\\u901A\\u77E5 \", __jsx(\"span\", {\n      style: {\n        fontSize: 14\n      }\n    }, \"(\", notifications, \")\"))\n  }, {\n    key: 'system',\n    tab: __jsx(\"span\", null, \"\\u7CFB\\u7EDF \", __jsx(\"span\", {\n      style: {\n        fontSize: 14\n      }\n    }, \"(\", systems, \")\"))\n  }, {\n    key: 'message',\n    tab: __jsx(\"span\", null, \"\\u79C1\\u4FE1 \", __jsx(\"span\", {\n      style: {\n        fontSize: 14\n      }\n    }, \"(\", messages, \")\"))\n  }];\n\n  const renderChildrenByTabKey = tabKey => {\n    if (tabKey === 'notification') {\n      return __jsx(_List, {\n        className: \"comment-list\",\n        itemLayout: \"horizontal\",\n        dataSource: data,\n        renderItem: item => __jsx(\"li\", null, __jsx(_Comment, {\n          author: item.name,\n          avatar: item.avatar,\n          content: item.description,\n          datetime: item.datetime\n        }))\n      });\n    }\n\n    if (tabKey === 'message') {\n      return __jsx(_List, {\n        className: \"comment-list\",\n        itemLayout: \"horizontal\",\n        dataSource: data,\n        renderItem: item => __jsx(\"li\", null, __jsx(_Comment, {\n          onClick: () => {\n            Router.push(item.data['article_link']);\n          },\n          author: item.name,\n          avatar: item.avatar,\n          content: item.description,\n          datetime: item.datetime\n        }))\n      });\n    }\n\n    if (tabKey === 'system') {\n      return __jsx(_List, {\n        className: \"comment-list\",\n        itemLayout: \"horizontal\",\n        dataSource: data,\n        renderItem: item => __jsx(\"li\", null, __jsx(_Comment, {\n          author: item.name,\n          avatar: item.avatar,\n          content: item.description,\n          datetime: item.datetime\n        }))\n      });\n    }\n\n    return null;\n  }; //获取会员数据\n\n\n  const checkLogin = () => {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    if (localStorage.getItem('token') != null) {\n      axios({\n        method: 'get',\n        url: servicePath.getUserInfo,\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        },\n        withCredentials: false,\n        cancelToken: source.token,\n        transformResponse: function (data) {\n          if (data.indexOf('errors') != -1) {\n            data = JSON.parse(data);\n\n            for (var item in data.errors) {\n              _message.error(data.errors[item][0]);\n            }\n          } else if (data.indexOf('Unauthenticated') != -1) {\n            localStorage.removeItem('token');\n            Router.push('/');\n          } else {\n            return data;\n          }\n        }\n      }).then(res => {\n        source.cancel('方法被取消');\n        res.data = eval('(' + res.data + ')');\n        console.log('res111', res);\n        setUser(res.data.data);\n        getNotification();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } else {\n      console.log('asasdas3');\n    }\n  };\n\n  const getNotification = () => {\n    axios({\n      method: 'get',\n      url: servicePath.getNotifications,\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('token')\n      },\n      withCredentials: false\n    }).then(res => {\n      let count = 0;\n      let count1 = 0;\n      let count2 = 0;\n\n      for (let i = 0; i < res.data.data.length; i++) {\n        if (res.data.data[i].type === \"notification\") {\n          count++;\n          console.log('count', count);\n        }\n\n        if (res.data.data[i].type === \"system\") {\n          count1++;\n          console.log('count1', count1);\n        }\n\n        if (res.data.data[i].type === \"message\") {\n          count2++;\n          console.log('count2', count2);\n        }\n      }\n\n      setNotifications(count);\n      setSystems(count1);\n      setMessages(count2);\n      setData(res.data.data);\n    });\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      checkLogin();\n    } else {\n      Router.push('/login');\n    }\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(_Card, {\n    className: \"tabsCard\",\n    bordered: false,\n    tabList: operationTabList,\n    activeTabKey: tabKey,\n    onTabChange: onTabChange\n  }, renderChildrenByTabKey(tabKey)));\n};\n\nexport default NoticeView;","map":{"version":3,"sources":["/Users/mac/Desktop/liy-blog/components/NoticeView.jsx"],"names":["React","useEffect","useState","NoticeIcon","axios","servicePath","Router","NoticeView","data","setData","user","setUser","notifications","setNotifications","systems","setSystems","messages","setMessages","tabKey","setTabKey","onTabChange","key","operationTabList","tab","fontSize","renderChildrenByTabKey","item","name","avatar","description","datetime","push","checkLogin","CancelToken","source","localStorage","getItem","method","url","getUserInfo","headers","withCredentials","cancelToken","token","transformResponse","indexOf","JSON","parse","errors","error","removeItem","then","res","cancel","eval","console","log","getNotification","catch","getNotifications","count","count1","count2","i","length","type"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport NoticeIcon from 'ant-design-pro/lib/NoticeIcon';\nimport { Card, message, Icon, Comment, List } from 'antd';\nimport axios from \"axios\";\nimport servicePath from '../config/apiUrl';\nimport Router from 'next/router'\n\nconst NoticeView = () => {\n    const [data, setData] = useState([])\n    const [user, setUser] = useState()\n    const [notifications, setNotifications] = useState(0)\n    const [systems, setSystems] = useState(0)\n    const [messages, setMessages] = useState(0)\n    const [tabKey, setTabKey] = useState(\"notification\")\n    const onTabChange = (key) => {\n        setTabKey(key)\n        \n    };\n\n    const operationTabList = [\n        {\n            key: 'notification',\n            tab: (\n                <span>\n                    通知 <span style={{ fontSize: 14 }}>({notifications})</span>\n                </span>\n            ),\n        },\n        {\n            key: 'system',\n            tab: (\n                <span>\n                    系统 <span style={{ fontSize: 14 }}>({systems})</span>\n                </span>\n            ),\n        },\n        {\n            key: 'message',\n            tab: (\n                <span>\n                    私信 <span style={{ fontSize: 14 }}>({messages})</span>\n                </span>\n            ),\n        }\n    ];\n\n    const renderChildrenByTabKey = (tabKey) => {\n        if (tabKey === 'notification') {\n            return <List\n                className=\"comment-list\"\n                itemLayout=\"horizontal\"\n                dataSource={data}\n                renderItem={item => (\n                    <li>\n                        <Comment\n                            author={item.name}\n                            avatar={item.avatar}\n                            content={item.description}\n                            datetime={item.datetime}\n                        />\n                    </li>\n                )}\n            />;\n        }\n\n        if (tabKey === 'message') {\n            return <List\n            className=\"comment-list\"\n            itemLayout=\"horizontal\"\n            dataSource={data}\n            renderItem={item => (\n                <li>\n                    <Comment\n                        onClick = {()=>{Router.push(item.data['article_link'])}}\n                        author={item.name}\n                        avatar={item.avatar}\n                        content={item.description}\n                        datetime={item.datetime}\n                    />\n                </li>\n            )}\n        />;\n        }\n\n        if (tabKey === 'system') {\n            return <List\n            className=\"comment-list\"\n            itemLayout=\"horizontal\"\n            dataSource={data}\n            renderItem={item => (\n                <li>\n                    <Comment\n                        author={item.name}\n                        avatar={item.avatar}\n                        content={item.description}\n                        datetime={item.datetime}\n                    />\n                </li>\n            )}\n        />;\n        }\n        return null;\n    };\n    //获取会员数据\n    const checkLogin = () => {\n        const CancelToken = axios.CancelToken;\n        const source = CancelToken.source();\n        if (localStorage.getItem('token') != null) {\n            axios({\n                method: 'get',\n                url: servicePath.getUserInfo,\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                },\n                withCredentials: false,\n                cancelToken: source.token,\n                transformResponse: function (data) {\n                    if (data.indexOf('errors') != -1) {\n                        data = JSON.parse(data);\n                        for (var item in data.errors) {\n                            message.error(data.errors[item][0]);\n                        }\n                    } else if (data.indexOf('Unauthenticated') != -1) {\n                        localStorage.removeItem('token')\n                        Router.push('/')\n                    } else {\n                        return data;\n                    }\n                }\n            }).then(\n                res => {\n                    source.cancel('方法被取消');\n                    res.data = eval('(' + res.data + ')');\n                    console.log('res111',res)\n                    setUser(res.data.data);\n                    getNotification()\n                }\n            ).catch(function (error) {\n                console.log(error)\n            });\n        } else {\n            console.log('asasdas3')\n        }\n    }\n\n    const getNotification = () => {\n        axios({\n            method: 'get',\n            url: servicePath.getNotifications,\n            headers: {\n                'Authorization': 'Bearer ' + localStorage.getItem('token'),\n            },\n            withCredentials: false,\n        }).then(res => {\n            let count = 0\n            let count1 = 0;\n            let count2 = 0;\n            for (let i = 0; i < res.data.data.length; i++) {\n                if (res.data.data[i].type === \"notification\") {\n                    count++\n                    console.log('count', count)\n                }\n                if (res.data.data[i].type === \"system\") {\n                    count1++\n                    console.log('count1', count1)\n                }\n                if (res.data.data[i].type === \"message\") {\n                    count2++\n                    console.log('count2', count2)\n                }\n            }\n            setNotifications(count)\n            setSystems(count1)\n            setMessages(count2)\n            setData(res.data.data);\n        }\n        )\n    }\n\n\n\n\n\n\n\n    useEffect(() => {\n        if (localStorage.getItem('token')) {\n            checkLogin()\n        } else {\n            Router.push('/login')\n        }\n    }, [])\n\n    return (\n        <>\n            <Card\n                className=\"tabsCard\"\n                bordered={false}\n                tabList={operationTabList}\n                activeTabKey={tabKey}\n                onTabChange={onTabChange}>\n                {renderChildrenByTabKey(tabKey)}\n            </Card>\n        </>\n    )\n}\n\nexport default NoticeView"]},"metadata":{},"sourceType":"module"}