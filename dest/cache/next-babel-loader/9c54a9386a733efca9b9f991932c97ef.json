{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Modal from \"antd/lib/modal\";\nimport _Upload from \"antd/lib/upload\";\nimport _Button from \"antd/lib/button\";\nimport _Icon from \"antd/lib/icon\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _message from \"antd/lib/message\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Form from \"antd/lib/form\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport marked from 'marked';\nimport Prism from 'prismjs';\nimport emojiToolkit from 'emoji-toolkit';\nimport dynamic from 'next/dynamic';\nimport 'yt-simplemde-editor/dist/style.css';\nimport servicePath from '../config/apiUrl';\nconst SimpleMDEEditor = dynamic(() => import(\"yt-simplemde-editor\"), {\n  ssr: false //这个要加上,禁止使用 SSR\n  ,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"yt-simplemde-editor\")],\n    modules: [\"yt-simplemde-editor\"]\n  }\n});\nconst emojiDependencies = dynamic(() => import(\"yt-simplemde-editor/dist/emoji\"), {\n  ssr: false //这个要加上,禁止使用 SSR\n  ,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak(\"yt-simplemde-editor/dist/emoji\")],\n    modules: [\"yt-simplemde-editor/dist/emoji\"]\n  }\n});\nconst FormItem = _Form.Item;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst uploadUrl = servicePath.uploadArticleImage;\nconst progressText = '![Uploading file {uid}...]()';\nconst urlText = '![file]({filename})';\nmarked.setOptions({\n  headerIds: false,\n  gfm: true,\n  breaks: true,\n\n  highlight(code, lang) {\n    if (lang) {\n      const language = lang.toLowerCase();\n      const grammar = Prism.languages[language];\n\n      if (grammar) {\n        return Prism.highlight(code, grammar, language);\n      }\n    }\n\n    return code;\n  }\n\n});\n\nclass Demo extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      uploadVisible: false // 本地上传\n\n    });\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e && e.preventDefault();\n      const {\n        form\n      } = this.props;\n      form.validateFieldsAndScroll((err, values) => {\n        if (!err) {// submit\n        }\n      });\n    });\n\n    _defineProperty(this, \"renderMarkdown\", text => {\n      let html = marked(text);\n      return emojiToolkit.toImage(html);\n    });\n  }\n\n  render() {\n    const editorProps = _objectSpread({\n      getMdeInstance: simplemde => {\n        this.simplemde = simplemde;\n      },\n      options: {\n        spellChecker: false,\n        forceSync: true,\n        autosave: {\n          enabled: true,\n          delay: 3000,\n          uniqueId: `article_content`\n        },\n        previewRender: this.renderMarkdown,\n        tabSize: 4,\n        toolbar: ['bold', 'italic', 'heading', '|', 'quote', 'code', 'table', 'horizontal-rule', 'unordered-list', 'ordered-list', '|', 'link', {\n          name: 'image',\n          action: () => {\n            this.setState({\n              uploadVisible: true\n            });\n          },\n          className: 'fa fa-image',\n          title: '上传图片'\n        }, '|', 'preview', 'side-by-side', 'fullscreen', '|', 'guide', {\n          name: 'submit',\n          action: () => {\n            this.handleSubmit();\n          },\n          className: 'fa fa-paper-plane',\n          title: '提交'\n        }, '|', 'emoji']\n      },\n      uploadOptions: {\n        action: uploadUrl,\n        jsonName: 'data.fileUrl',\n        // 服务端响应格式 {\"data\":{\"fileUrl\":\"http:\\/\\/api.blog.test\\/storage\\/tmp\\/w9jfWHWUUuiaeqYAl7K1PhBBRgzamCv20ScdW1mn.png\"}}\n        withCredentials: false,\n\n        beforeUpload(file) {\n          const isLt2M = file.size / 1024 / 1024 < 2;\n\n          if (!isLt2M) {\n            _message.error('Image must smaller than 2MB!');\n          }\n\n          return isLt2M;\n        },\n\n        headers: {\n          'Authorization': 'Bearer ' + localStorage.getItem('token')\n        },\n\n        onError(err, response) {\n          if (response.message) {\n            _message.error(response.message);\n          }\n        }\n\n      },\n      emoji: {\n        enabled: true,\n        autoComplete: true,\n        insertConvertTo: 'unicode'\n      }\n    }, emojiDependencies);\n\n    const uploadProps = {\n      action: uploadUrl,\n      name: 'file',\n      multiple: true,\n      showUploadList: false,\n      beforeUpload: file => {\n        const text = progressText.replace('{uid}', file.uid);\n        this.simplemde.codemirror.replaceSelection(text);\n        file.insertText = text;\n      },\n      headers: {\n        Accept: 'application/x.sheng.v2+json',\n        authorization: 'authorization-text'\n      },\n      onChange: ({\n        file\n      }) => {\n        if (file.status === 'done') {\n          const {\n            response: {\n              data\n            },\n            originFileObj\n          } = file;\n          const {\n            fileUrl\n          } = data;\n          const cursor = this.simplemde.codemirror.getCursor();\n          const newValue = urlText.replace('{filename}', fileUrl);\n          const text = this.simplemde.codemirror.getValue().replace(originFileObj.insertText, newValue);\n          this.simplemde.codemirror.setValue(text);\n          cursor.ch += newValue.length - progressText.length;\n          this.simplemde.codemirror.setCursor(cursor);\n          this.simplemde.codemirror.focus();\n          originFileObj.insertText = newValue;\n        }\n\n        if (file.status === 'error') {\n          const {\n            response: {\n              message: msg\n            },\n            originFileObj\n          } = file;\n\n          _message.error(msg);\n\n          const text = this.simplemde.codemirror.getValue().replace(originFileObj.insertText, '');\n          this.simplemde.codemirror.setValue(text);\n        }\n\n        this.setState({\n          uploadVisible: false\n        });\n      }\n    };\n    return __jsx(\"div\", {\n      className: \"normal\"\n    }, __jsx(FormItem, _extends({}, formItemLayout, {\n      label: \"\\u5185\\u5BB9\"\n    }), __jsx(SimpleMDEEditor, editorProps), \",\"), __jsx(_Modal, {\n      title: \"\\u63D2\\u5165\\u56FE\\u7247\",\n      visible: this.state.uploadVisible,\n      footer: null,\n      centered: true,\n      onCancel: () => {\n        this.setState({\n          uploadVisible: false\n        });\n      }\n    }, __jsx(_Upload, uploadProps, __jsx(_Button, {\n      type: \"primary\"\n    }, __jsx(_Icon, {\n      type: \"upload\"\n    }), \" \\u70B9\\u51FB\\u4E0A\\u4F20\"))));\n  }\n\n}\n\nexport default Demo;","map":{"version":3,"sources":["/Users/mac/Desktop/liy-blog/pages/demo.js"],"names":["React","marked","Prism","emojiToolkit","dynamic","servicePath","SimpleMDEEditor","ssr","emojiDependencies","FormItem","Item","formItemLayout","labelCol","xs","span","sm","wrapperCol","uploadUrl","uploadArticleImage","progressText","urlText","setOptions","headerIds","gfm","breaks","highlight","code","lang","language","toLowerCase","grammar","languages","Demo","Component","uploadVisible","e","preventDefault","form","props","validateFieldsAndScroll","err","values","text","html","toImage","render","editorProps","getMdeInstance","simplemde","options","spellChecker","forceSync","autosave","enabled","delay","uniqueId","previewRender","renderMarkdown","tabSize","toolbar","name","action","setState","className","title","handleSubmit","uploadOptions","jsonName","withCredentials","beforeUpload","file","isLt2M","size","error","headers","localStorage","getItem","onError","response","message","emoji","autoComplete","insertConvertTo","uploadProps","multiple","showUploadList","replace","uid","codemirror","replaceSelection","insertText","Accept","authorization","onChange","status","data","originFileObj","fileUrl","cursor","getCursor","newValue","getValue","setValue","ch","length","setCursor","focus","msg","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Modal, Button, Upload, Icon, message } from 'antd';\nimport marked from 'marked';\nimport Prism from 'prismjs';\nimport emojiToolkit from 'emoji-toolkit';\nimport dynamic from 'next/dynamic'\nimport 'yt-simplemde-editor/dist/style.css';\nimport servicePath from '../config/apiUrl';\nconst SimpleMDEEditor = dynamic(\n    import(\"yt-simplemde-editor\"),\n    {\n        ssr: false   //这个要加上,禁止使用 SSR\n    }\n)\n\nconst emojiDependencies = dynamic(\n    import(\"yt-simplemde-editor/dist/emoji\"),\n    {\n        ssr: false   //这个要加上,禁止使用 SSR\n    }\n)\nconst FormItem = Form.Item;\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    },\n};\n\nconst uploadUrl = servicePath.uploadArticleImage;\nconst progressText = '![Uploading file {uid}...]()';\nconst urlText = '![file]({filename})';\n\nmarked.setOptions({\n    headerIds: false,\n    gfm: true,\n    breaks: true,\n    highlight(code, lang) {\n        if (lang) {\n            const language = lang.toLowerCase();\n            const grammar = Prism.languages[language];\n            if (grammar) {\n                return Prism.highlight(code, grammar, language);\n            }\n        }\n\n        return code;\n    }\n});\n\n\nclass Demo extends React.Component {\n    state = {\n        uploadVisible: false, // 本地上传\n    };\n\n    handleSubmit = (e) => {\n        e && e.preventDefault();\n        const { form } = this.props;\n        form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                // submit\n            }\n        });\n    };\n\n    renderMarkdown = text => {\n        let html = marked(text);\n        return emojiToolkit.toImage(html);\n    };\n\n    render() {\n    \n\n        const editorProps = {\n            getMdeInstance: simplemde => {\n                this.simplemde = simplemde;\n            },\n            options: {\n                spellChecker: false,\n                forceSync: true,\n                autosave: {\n                    enabled: true,\n                    delay: 3000,\n                    uniqueId: `article_content`,\n                },\n                previewRender: this.renderMarkdown,\n                tabSize: 4,\n                toolbar: [\n                    'bold',\n                    'italic',\n                    'heading',\n                    '|',\n                    'quote',\n                    'code',\n                    'table',\n                    'horizontal-rule',\n                    'unordered-list',\n                    'ordered-list',\n                    '|',\n                    'link',\n                    {\n                        name: 'image',\n                        action: () => {\n                            this.setState({ uploadVisible: true })\n                        },\n                        className: 'fa fa-image',\n                        title: '上传图片',\n                    },\n                    '|',\n                    'preview',\n                    'side-by-side',\n                    'fullscreen',\n                    '|',\n                    'guide',\n                    {\n                        name: 'submit',\n                        action: () => {\n                            this.handleSubmit();\n                        },\n                        className: 'fa fa-paper-plane',\n                        title: '提交',\n                    },\n                    '|',\n                    'emoji',\n                ],\n            },\n            uploadOptions: {\n                action: uploadUrl,\n                jsonName: 'data.fileUrl', // 服务端响应格式 {\"data\":{\"fileUrl\":\"http:\\/\\/api.blog.test\\/storage\\/tmp\\/w9jfWHWUUuiaeqYAl7K1PhBBRgzamCv20ScdW1mn.png\"}}\n                withCredentials: false,\n                beforeUpload(file) {\n                    const isLt2M = file.size / 1024 / 1024 < 2;\n                    if (!isLt2M) {\n                        message.error('Image must smaller than 2MB!');\n                    }\n                    return isLt2M;\n                },\n                headers: {\n                    'Authorization': 'Bearer ' + localStorage.getItem('token'),\n                },\n                onError(err, response) {\n                    if (response.message) {\n                        message.error(response.message);\n                    }\n                },\n            },\n            emoji: {\n                enabled: true,\n                autoComplete: true,\n                insertConvertTo: 'unicode',\n            },\n            ...emojiDependencies, // emoji相关依赖包比较大，如果不需要emoji可以不引入\n        };\n\n        const uploadProps = {\n            action: uploadUrl,\n            name: 'file',\n            multiple: true,\n            showUploadList: false,\n            beforeUpload: file => {\n                const text = progressText.replace('{uid}', file.uid);\n                this.simplemde.codemirror.replaceSelection(text);\n                file.insertText = text;\n            },\n            headers: {\n                Accept: 'application/x.sheng.v2+json',\n                authorization: 'authorization-text',\n            },\n            onChange: ({ file }) => {\n                if (file.status === 'done') {\n                    const { response: { data }, originFileObj } = file;\n                    const { fileUrl } = data;\n                    const cursor = this.simplemde.codemirror.getCursor();\n                    const newValue = urlText.replace('{filename}', fileUrl);\n                    const text = this.simplemde.codemirror.getValue().replace(originFileObj.insertText, newValue);\n                    this.simplemde.codemirror.setValue(text);\n                    cursor.ch += newValue.length - progressText.length;\n                    this.simplemde.codemirror.setCursor(cursor);\n                    this.simplemde.codemirror.focus();\n                    originFileObj.insertText = newValue;\n                }\n\n                if (file.status === 'error') {\n                    const { response: { message: msg }, originFileObj } = file;\n                    message.error(msg);\n                    const text = this.simplemde.codemirror.getValue().replace(originFileObj.insertText, '');\n                    this.simplemde.codemirror.setValue(text);\n                }\n\n                this.setState({ uploadVisible: false });\n            },\n        };\n\n        return (\n            <div className=\"normal\">\n                <FormItem {...formItemLayout} label=\"内容\">\n                        <SimpleMDEEditor {...editorProps} />,\n                </FormItem>\n                <Modal\n                    title=\"插入图片\"\n                    visible={this.state.uploadVisible}\n                    footer={null}\n                    centered={true}\n                    onCancel={() => {\n                        this.setState({ uploadVisible: false });\n                    }}\n                >\n                    <Upload {...uploadProps}>\n                        <Button type=\"primary\">\n                            <Icon type=\"upload\" /> 点击上传\n            </Button>\n                    </Upload>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default Demo;"]},"metadata":{},"sourceType":"module"}