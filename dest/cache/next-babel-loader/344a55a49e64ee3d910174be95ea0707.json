{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Modal from \"antd/lib/modal\";\nimport _Upload from \"antd/lib/upload\";\nimport _Button from \"antd/lib/button\";\nimport _Icon from \"antd/lib/icon\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _message from \"antd/lib/message\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Form from \"antd/lib/form\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport marked from 'marked';\nimport Prism from 'prismjs';\nimport emojiToolkit from 'emoji-toolkit';\nimport 'yt-simplemde-editor/dist/style.css';\nvar SimpleMDEEditor = dynamic(import(\"yt-simplemde-editor\"), {\n  ssr: false //这个要加上,禁止使用 SSR\n\n});\nvar emojiDependencies = dynamic(import(\"yt-simplemde-editor/dist/emoji\"), {\n  ssr: false //这个要加上,禁止使用 SSR\n\n});\nvar FormItem = _Form.Item;\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 4\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nvar uploadUrl = '/api/attachments/upload';\nvar progressText = '![Uploading file {uid}...]()';\nvar urlText = '![file]({filename})';\nmarked.setOptions({\n  headerIds: false,\n  gfm: true,\n  breaks: true,\n  highlight: function highlight(code, lang) {\n    if (lang) {\n      var language = lang.toLowerCase();\n      var grammar = Prism.languages[language];\n\n      if (grammar) {\n        return Prism.highlight(code, grammar, language);\n      }\n    }\n\n    return code;\n  }\n});\n\nvar Demo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Demo, _React$Component);\n\n  function Demo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Demo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Demo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      uploadVisible: false // 本地上传\n\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e && e.preventDefault();\n      var form = _this.props.form;\n      form.validateFieldsAndScroll(function (err, values) {\n        if (!err) {// submit\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderMarkdown\", function (text) {\n      var html = marked(text);\n      return emojiToolkit.toImage(html);\n    });\n\n    return _this;\n  }\n\n  _createClass(Demo, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n\n      var editorProps = _objectSpread({\n        getMdeInstance: function getMdeInstance(simplemde) {\n          _this2.simplemde = simplemde;\n        },\n        options: {\n          spellChecker: false,\n          forceSync: true,\n          autosave: {\n            enabled: true,\n            delay: 3000,\n            uniqueId: \"article_content\"\n          },\n          previewRender: this.renderMarkdown,\n          tabSize: 4,\n          toolbar: ['bold', 'italic', 'heading', '|', 'quote', 'code', 'table', 'horizontal-rule', 'unordered-list', 'ordered-list', '|', 'link', {\n            name: 'image',\n            action: function action() {\n              _this2.setState({\n                uploadVisible: true\n              });\n            },\n            className: 'fa fa-image',\n            title: '上传图片'\n          }, '|', 'preview', 'side-by-side', 'fullscreen', '|', 'guide', {\n            name: 'submit',\n            action: function action() {\n              _this2.handleSubmit();\n            },\n            className: 'fa fa-paper-plane',\n            title: '提交'\n          }, '|', 'emoji']\n        },\n        uploadOptions: {\n          action: uploadUrl,\n          jsonName: 'data.fileUrl',\n          // 服务端响应格式 {\"data\":{\"fileUrl\":\"http:\\/\\/api.blog.test\\/storage\\/tmp\\/w9jfWHWUUuiaeqYAl7K1PhBBRgzamCv20ScdW1mn.png\"}}\n          withCredentials: true,\n          beforeUpload: function beforeUpload(file) {\n            var isLt2M = file.size / 1024 / 1024 < 2;\n\n            if (!isLt2M) {\n              _message.error('Image must smaller than 2MB!');\n            }\n\n            return isLt2M;\n          },\n          headers: {\n            Accept: 'application/x.sheng.v2+json',\n            authorization: 'authorization-text'\n          },\n          onError: function onError(err, response) {\n            if (response.message) {\n              _message.error(response.message);\n            }\n          }\n        },\n        emoji: {\n          enabled: true,\n          autoComplete: true,\n          insertConvertTo: 'unicode'\n        }\n      }, emojiDependencies);\n\n      var uploadProps = {\n        action: uploadUrl,\n        name: 'file',\n        multiple: true,\n        showUploadList: false,\n        beforeUpload: function beforeUpload(file) {\n          var text = progressText.replace('{uid}', file.uid);\n\n          _this2.simplemde.codemirror.replaceSelection(text);\n\n          file.insertText = text;\n        },\n        headers: {\n          Accept: 'application/x.sheng.v2+json',\n          authorization: 'authorization-text'\n        },\n        onChange: function onChange(_ref) {\n          var file = _ref.file;\n\n          if (file.status === 'done') {\n            var data = file.response.data,\n                originFileObj = file.originFileObj;\n            var fileUrl = data.fileUrl;\n\n            var cursor = _this2.simplemde.codemirror.getCursor();\n\n            var newValue = urlText.replace('{filename}', fileUrl);\n\n            var text = _this2.simplemde.codemirror.getValue().replace(originFileObj.insertText, newValue);\n\n            _this2.simplemde.codemirror.setValue(text);\n\n            cursor.ch += newValue.length - progressText.length;\n\n            _this2.simplemde.codemirror.setCursor(cursor);\n\n            _this2.simplemde.codemirror.focus();\n\n            originFileObj.insertText = newValue;\n          }\n\n          if (file.status === 'error') {\n            var msg = file.response.message,\n                _originFileObj = file.originFileObj;\n\n            _message.error(msg);\n\n            var _text = _this2.simplemde.codemirror.getValue().replace(_originFileObj.insertText, '');\n\n            _this2.simplemde.codemirror.setValue(_text);\n          }\n\n          _this2.setState({\n            uploadVisible: false\n          });\n        }\n      };\n      return __jsx(\"div\", {\n        className: \"normal\"\n      }, __jsx(FormItem, _extends({}, formItemLayout, {\n        label: \"\\u5185\\u5BB9\"\n      }), getFieldDecorator('content', {\n        rules: [{\n          required: true,\n          message: '请输入文章内容'\n        }]\n      })(__jsx(SimpleMDEEditor, editorProps))), __jsx(_Modal, {\n        title: \"\\u63D2\\u5165\\u56FE\\u7247\",\n        visible: this.state.uploadVisible,\n        footer: null,\n        centered: true,\n        onCancel: function onCancel() {\n          _this2.setState({\n            uploadVisible: false\n          });\n        }\n      }, __jsx(_Upload, uploadProps, __jsx(_Button, {\n        type: \"primary\"\n      }, __jsx(_Icon, {\n        type: \"upload\"\n      }), \" \\u70B9\\u51FB\\u4E0A\\u4F20\"))));\n    }\n  }]);\n\n  return Demo;\n}(React.Component);\n\nexport default Demo;","map":{"version":3,"sources":["/Users/mac/Desktop/liy-blog/pages/demo.js"],"names":["React","marked","Prism","emojiToolkit","SimpleMDEEditor","dynamic","ssr","emojiDependencies","FormItem","Item","formItemLayout","labelCol","xs","span","sm","wrapperCol","uploadUrl","progressText","urlText","setOptions","headerIds","gfm","breaks","highlight","code","lang","language","toLowerCase","grammar","languages","Demo","uploadVisible","e","preventDefault","form","props","validateFieldsAndScroll","err","values","text","html","toImage","getFieldDecorator","editorProps","getMdeInstance","simplemde","options","spellChecker","forceSync","autosave","enabled","delay","uniqueId","previewRender","renderMarkdown","tabSize","toolbar","name","action","setState","className","title","handleSubmit","uploadOptions","jsonName","withCredentials","beforeUpload","file","isLt2M","size","error","headers","Accept","authorization","onError","response","message","emoji","autoComplete","insertConvertTo","uploadProps","multiple","showUploadList","replace","uid","codemirror","replaceSelection","insertText","onChange","status","data","originFileObj","fileUrl","cursor","getCursor","newValue","getValue","setValue","ch","length","setCursor","focus","msg","rules","required","state","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Form, Modal, Button, Upload, Icon, message } from 'antd';\nimport marked from 'marked';\nimport Prism from 'prismjs';\nimport emojiToolkit from 'emoji-toolkit';\nimport 'yt-simplemde-editor/dist/style.css';\nconst SimpleMDEEditor = dynamic(\n    import(\"yt-simplemde-editor\"),\n    {\n        ssr: false   //这个要加上,禁止使用 SSR\n    }\n)\n\nconst emojiDependencies = dynamic(\n    import(\"yt-simplemde-editor/dist/emoji\"),\n    {\n        ssr: false   //这个要加上,禁止使用 SSR\n    }\n)\nconst FormItem = Form.Item;\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    },\n};\n\nconst uploadUrl = '/api/attachments/upload';\nconst progressText = '![Uploading file {uid}...]()';\nconst urlText = '![file]({filename})';\n\nmarked.setOptions({\n    headerIds: false,\n    gfm: true,\n    breaks: true,\n    highlight(code, lang) {\n        if (lang) {\n            const language = lang.toLowerCase();\n            const grammar = Prism.languages[language];\n            if (grammar) {\n                return Prism.highlight(code, grammar, language);\n            }\n        }\n\n        return code;\n    }\n});\n\n\nclass Demo extends React.Component {\n    state = {\n        uploadVisible: false, // 本地上传\n    };\n\n    handleSubmit = (e) => {\n        e && e.preventDefault();\n        const { form } = this.props;\n        form.validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                // submit\n            }\n        });\n    };\n\n    renderMarkdown = text => {\n        let html = marked(text);\n        return emojiToolkit.toImage(html);\n    };\n\n    render() {\n        const { form: { getFieldDecorator } } = this.props;\n\n        const editorProps = {\n            getMdeInstance: simplemde => {\n                this.simplemde = simplemde;\n            },\n            options: {\n                spellChecker: false,\n                forceSync: true,\n                autosave: {\n                    enabled: true,\n                    delay: 3000,\n                    uniqueId: `article_content`,\n                },\n                previewRender: this.renderMarkdown,\n                tabSize: 4,\n                toolbar: [\n                    'bold',\n                    'italic',\n                    'heading',\n                    '|',\n                    'quote',\n                    'code',\n                    'table',\n                    'horizontal-rule',\n                    'unordered-list',\n                    'ordered-list',\n                    '|',\n                    'link',\n                    {\n                        name: 'image',\n                        action: () => {\n                            this.setState({ uploadVisible: true })\n                        },\n                        className: 'fa fa-image',\n                        title: '上传图片',\n                    },\n                    '|',\n                    'preview',\n                    'side-by-side',\n                    'fullscreen',\n                    '|',\n                    'guide',\n                    {\n                        name: 'submit',\n                        action: () => {\n                            this.handleSubmit();\n                        },\n                        className: 'fa fa-paper-plane',\n                        title: '提交',\n                    },\n                    '|',\n                    'emoji',\n                ],\n            },\n            uploadOptions: {\n                action: uploadUrl,\n                jsonName: 'data.fileUrl', // 服务端响应格式 {\"data\":{\"fileUrl\":\"http:\\/\\/api.blog.test\\/storage\\/tmp\\/w9jfWHWUUuiaeqYAl7K1PhBBRgzamCv20ScdW1mn.png\"}}\n                withCredentials: true,\n                beforeUpload(file) {\n                    const isLt2M = file.size / 1024 / 1024 < 2;\n                    if (!isLt2M) {\n                        message.error('Image must smaller than 2MB!');\n                    }\n                    return isLt2M;\n                },\n                headers: {\n                    Accept: 'application/x.sheng.v2+json',\n                    authorization: 'authorization-text',\n                },\n                onError(err, response) {\n                    if (response.message) {\n                        message.error(response.message);\n                    }\n                },\n            },\n            emoji: {\n                enabled: true,\n                autoComplete: true,\n                insertConvertTo: 'unicode',\n            },\n            ...emojiDependencies, // emoji相关依赖包比较大，如果不需要emoji可以不引入\n        };\n\n        const uploadProps = {\n            action: uploadUrl,\n            name: 'file',\n            multiple: true,\n            showUploadList: false,\n            beforeUpload: file => {\n                const text = progressText.replace('{uid}', file.uid);\n                this.simplemde.codemirror.replaceSelection(text);\n                file.insertText = text;\n            },\n            headers: {\n                Accept: 'application/x.sheng.v2+json',\n                authorization: 'authorization-text',\n            },\n            onChange: ({ file }) => {\n                if (file.status === 'done') {\n                    const { response: { data }, originFileObj } = file;\n                    const { fileUrl } = data;\n                    const cursor = this.simplemde.codemirror.getCursor();\n                    const newValue = urlText.replace('{filename}', fileUrl);\n                    const text = this.simplemde.codemirror.getValue().replace(originFileObj.insertText, newValue);\n                    this.simplemde.codemirror.setValue(text);\n                    cursor.ch += newValue.length - progressText.length;\n                    this.simplemde.codemirror.setCursor(cursor);\n                    this.simplemde.codemirror.focus();\n                    originFileObj.insertText = newValue;\n                }\n\n                if (file.status === 'error') {\n                    const { response: { message: msg }, originFileObj } = file;\n                    message.error(msg);\n                    const text = this.simplemde.codemirror.getValue().replace(originFileObj.insertText, '');\n                    this.simplemde.codemirror.setValue(text);\n                }\n\n                this.setState({ uploadVisible: false });\n            },\n        };\n\n        return (\n            <div className=\"normal\">\n                <FormItem {...formItemLayout} label=\"内容\">\n                    {getFieldDecorator('content', {\n                        rules: [{ required: true, message: '请输入文章内容' }],\n                    })(\n                        <SimpleMDEEditor {...editorProps} />,\n                    )}\n                </FormItem>\n                <Modal\n                    title=\"插入图片\"\n                    visible={this.state.uploadVisible}\n                    footer={null}\n                    centered={true}\n                    onCancel={() => {\n                        this.setState({ uploadVisible: false });\n                    }}\n                >\n                    <Upload {...uploadProps}>\n                        <Button type=\"primary\">\n                            <Icon type=\"upload\" /> 点击上传\n            </Button>\n                    </Upload>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default Demo;"]},"metadata":{},"sourceType":"module"}